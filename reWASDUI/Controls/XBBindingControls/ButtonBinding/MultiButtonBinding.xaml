<buttonBinding:BaseButtonBinding
	x:Class="reWASDUI.Controls.XBBindingControls.ButtonBinding.MultiButtonBinding" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:comboBoxes="clr-namespace:DiscSoft.NET.Common.View.Controls.ComboBoxes;assembly=DiscSoft.NET.Common" xmlns:converters="clr-namespace:DiscSoft.NET.Common.Utils.Converters;assembly=DiscSoft.NET.Common" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:buttonBinding="clr-namespace:reWASDUI.Controls.XBBindingControls.ButtonBinding" xmlns:controls="clr-namespace:reWASDUI.Controls" xmlns:converters2="clr-namespace:reWASDUI.Utils.Converters" xmlns:bindingFrame="clr-namespace:reWASDUI.Controls.XBBindingControls.BindingFrame" xmlns:services="clr-namespace:reWASDUI.Services" xmlns:interfaces1="clr-namespace:reWASDUI.Services.Interfaces">
	<Control.Template>
		<ControlTemplate
			TargetType="{x:Type buttonBinding:MultiButtonBinding}">
			<StackPanel>
				<TextBlock
					Name="tbLabel"
					FrameworkElement.Style="{DynamicResource DTTextBlockControlLabelStyle}"
					TextBlock.Text="{TemplateBinding buttonBinding:BaseButtonBinding.Title}"
					UIElement.IsEnabled="{Binding GameProfilesService.CurrentGame.CurrentConfig.IsEditConfigMode}" />
				<Grid
					UIElement.IsEnabled="{Binding GameProfilesService.CurrentGame.CurrentConfig.IsEditConfigMode}">
					<comboBoxes:ColoredComboBox
						FrameworkElement.HorizontalAlignment="Stretch"
						FrameworkElement.VerticalAlignment="Center"
						Control.BorderBrush="{TemplateBinding buttonBinding:BaseButtonBinding.ControlsBorderBrush}"
						HighlightedBorderBrush="{TemplateBinding buttonBinding:BaseButtonBinding.ControlsBorderBrush}"
						PopupBorderBrush="{TemplateBinding buttonBinding:BaseButtonBinding.ControlsBorderBrush}"
						ItemsControl.ItemsSource="{Binding FilteredButtonsToBind, RelativeSource={RelativeSource TemplatedParent}}"
						SelectedItem="{Binding CurrentButtonToBind, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
						UIElement.Visibility="{Binding FilteredButtonsToBind.Count, ConverterParameter='> 1', RelativeSource={RelativeSource TemplatedParent}, Converter={converters:ValueSatisfiesRuleParameterToVisibilityConverter}}" />
					<ContentControl
						ContentControl.Content="{Binding CurrentButtonToBind, RelativeSource={RelativeSource TemplatedParent}}"
						UIElement.Visibility="{Binding FilteredButtonsToBind.Count, ConverterParameter='<= 1', RelativeSource={RelativeSource TemplatedParent}, Converter={converters:ValueSatisfiesRuleParameterToVisibilityConverter}}" />
				</Grid>
				<buttonBinding:SingleButtonBinding
					x:Name="SingleButtonBinding"
					FrameworkElement.Margin="0,0,0,10"
					ControlsBorderBrush="{TemplateBinding buttonBinding:BaseButtonBinding.ControlsBorderBrush}"
					TitleKeyMap="{TemplateBinding buttonBinding:BaseButtonBinding.TitleKeyMap}"
					TitleRemap="{TemplateBinding buttonBinding:BaseButtonBinding.TitleRemap}"
					CurrentVirtualGamepad="{Binding GameProfilesService.CurrentGame.CurrentConfig.ConfigData.VirtualGamepadType}"
					EventAggregator="{Binding EventAggregator, RelativeSource={RelativeSource TemplatedParent}}"
					GamepadButtonToBind="{Binding CurrentButtonToBind, RelativeSource={RelativeSource TemplatedParent}}"
					IsChangeCurrentBinding="{Binding IsChangeCurrentBinding, RelativeSource={RelativeSource TemplatedParent}}"
					UIElement.IsEnabled="{Binding GameProfilesService.CurrentGame.CurrentConfig.IsEditConfigMode}"
					KeyBindingService="{Binding KeyBindingService, RelativeSource={RelativeSource TemplatedParent}}"
					UIElement.Visibility="{Binding MappingSelectorIsVisible, Converter={converters:BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
					<buttonBinding:BaseButtonBinding.AllowKeyboardHooks>
						<MultiBinding
							Converter="{converters:MultiBooleanAndConverter}">
							<Binding
								Path="GameProfilesService.CurrentGame.CurrentConfig.IsEditConfigMode" />
							<Binding
								Path="AllowKeyboardHooks"
								RelativeSource="{RelativeSource TemplatedParent}" />
						</MultiBinding>
					</buttonBinding:BaseButtonBinding.AllowKeyboardHooks>
					<xbbindingcontrols:BaseXBBindingUserControl.XBBinding xmlns:xbbindingcontrols="clr-namespace:reWASDUI.Controls.XBBindingControls">
						<MultiBinding
							Converter="{converters:BindToDictionaryWithKeyConverter}">
							<Binding
								Path="GameProfilesService.RealCurrentBeingMappedBindingCollection" />
							<Binding
								Path="CurrentButtonToBind"
								RelativeSource="{RelativeSource TemplatedParent}" />
						</MultiBinding>
					</xbbindingcontrols:BaseXBBindingUserControl.XBBinding>
				</buttonBinding:SingleButtonBinding>
				<Grid
					FrameworkElement.Margin="0,0,0,10">
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							ColumnDefinition.Width="0.5*" />
						<ColumnDefinition
							ColumnDefinition.Width="0.5*" />
					</Grid.ColumnDefinitions>
					<controls:KeyComboButtonUC
						FrameworkElement.Margin="0,0,5,0"
						ControllerButtonShowFor="{Binding CurrentButtonToBind, RelativeSource={RelativeSource TemplatedParent}, Converter={converters2:GamepadButtonToAssociatedControllerButton}}" />
					<controls:RumbleButtonUC
						Grid.Column="1"
						FrameworkElement.Margin="5,0,0,0"
						ControllerButtonShowFor="{Binding CurrentButtonToBind, RelativeSource={RelativeSource TemplatedParent}, Converter={converters2:GamepadButtonToAssociatedControllerButton}}" />
				</Grid>
				<bindingFrame:TurboToggle
					ToggleIsVisible="{TemplateBinding buttonBinding:MultiButtonBinding.ToggleIsVisible}"
					TurboIsVisible="{TemplateBinding buttonBinding:MultiButtonBinding.TurboIsVisible}"
					UIElement.IsEnabled="{Binding GameProfilesService.CurrentGame.CurrentConfig.IsEditConfigMode}">
					<bindingFrame:TurboToggle.XBBinding>
						<MultiBinding
							Converter="{converters:BindToDictionaryWithKeyConverter}">
							<Binding
								Path="GameProfilesService.RealCurrentBeingMappedBindingCollection" />
							<Binding
								Path="CurrentButtonToBind"
								RelativeSource="{RelativeSource TemplatedParent}" />
						</MultiBinding>
					</bindingFrame:TurboToggle.XBBinding>
				</bindingFrame:TurboToggle>
			</StackPanel>
		</ControlTemplate>
	</Control.Template>
</buttonBinding:BaseButtonBinding>
