<ToolTip
	x:Class="reWASDUI.Controls.XBBindingControls.XBBindingTooltip" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:localization="clr-namespace:DiscSoft.NET.Common.Localization;assembly=DiscSoft.NET.Common" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:DTEngine;assembly=DiscSoft.NET.Common" xmlns:converters="clr-namespace:reWASDUI.Utils.Converters" xmlns:bindingAnnotation="clr-namespace:reWASDUI.Controls.XBBindingControls.BindingAnnotation" xmlns:xbBindingControls="clr-namespace:reWASDUI.Controls.XBBindingControls">
	<FrameworkElement.Style>
		<Style
			TargetType="{x:Type xbBindingControls:XBBindingTooltip}">
			<Setter
				Property="Control.Template">
				<Setter.Value>
					<ControlTemplate
						TargetType="{x:Type xbBindingControls:XBBindingTooltip}">
						<Border
							FrameworkElement.Name="Border"
							FrameworkElement.Width="{TemplateBinding FrameworkElement.Width}"
							FrameworkElement.Height="{TemplateBinding FrameworkElement.Height}"
							Border.Background="{DynamicResource MenuBackground}"
							Border.BorderBrush="{DynamicResource TooltipBorder}"
							Border.BorderThickness="1">
							<StackPanel
								FrameworkElement.Margin="4,4"
								FrameworkElement.HorizontalAlignment="Center"
								FrameworkElement.VerticalAlignment="Center"
								Orientation="Vertical">
								<TextBlock
									Name="flydigiHint"
									TextBlock.Foreground="#FFFFFFFF"
									TextBlock.Text="{localization:Translate {x:Static s:StringConsts.STR_FLYDIGI_PAIR_BUTTON_HINT}}"
									UIElement.Visibility="{Binding XBBinding.GamepadButton, RelativeSource={RelativeSource TemplatedParent}, Converter={converters:IsFlyDigiPairButtonToVisibilityConverter}}" />
								<bindingAnnotation:GamepadBindingAnnotationText
									ShowAsTooltip="True"
									XBBinding="{TemplateBinding xbBindingControls:XBBindingTooltip.XBBinding}" />
								<bindingAnnotation:GamepadRemapAnnotation
									FrameworkElement.Margin="0,2"
									XBBinding="{TemplateBinding xbBindingControls:XBBindingTooltip.XBBinding}" />
								<bindingAnnotation:GamepadMaskAnnotationToolTip
									FrameworkElement.Margin="0,2"
									XBBinding="{TemplateBinding xbBindingControls:XBBindingTooltip.XBBinding}" />
							</StackPanel>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<MultiDataTrigger>
					<MultiDataTrigger.Conditions>
						<Condition
							Value="False"
							Binding="{Binding XBBinding.IsAnnotationShouldBeShownForMapping, RelativeSource={RelativeSource Self}}" />
						<Condition
							Value="False"
							Binding="{Binding XBBinding.HostCollection.IsLabelModeView, RelativeSource={RelativeSource Self}}" />
					</MultiDataTrigger.Conditions>
					<Setter
						Property="UIElement.Visibility"
						Value="Collapsed" />
				</MultiDataTrigger>
				<MultiDataTrigger>
					<MultiDataTrigger.Conditions>
						<Condition
							Value="False"
							Binding="{Binding XBBinding.IsAnnotationShouldBeShownForDescription, RelativeSource={RelativeSource Self}}" />
						<Condition
							Value="True"
							Binding="{Binding XBBinding.HostCollection.IsLabelModeView, RelativeSource={RelativeSource Self}}" />
					</MultiDataTrigger.Conditions>
					<Setter
						Property="UIElement.Visibility"
						Value="Collapsed" />
				</MultiDataTrigger>
				<DataTrigger
					Value="Visible"
					Binding="{Binding XBBinding.GamepadButton, RelativeSource={RelativeSource Self}, Converter={converters:IsFlyDigiPairButtonToVisibilityConverter}}">
					<Setter
						Property="UIElement.Visibility"
						Value="Visible" />
				</DataTrigger>
				<DataTrigger
					Value="False"
					Binding="{Binding IsXbBindingHint, RelativeSource={RelativeSource Self}}">
					<Setter
						Property="Control.Template">
						<Setter.Value>
							<ControlTemplate
								TargetType="{x:Type xbBindingControls:XBBindingTooltip}">
								<Border
									FrameworkElement.Name="hintBorder"
									FrameworkElement.Width="{TemplateBinding FrameworkElement.Width}"
									FrameworkElement.Height="{TemplateBinding FrameworkElement.Height}"
									Border.Background="{DynamicResource MenuBackground}"
									Border.BorderBrush="{DynamicResource TooltipBorder}"
									Border.BorderThickness="1">
									<TextBlock
										FrameworkElement.Margin="3,0,3,0"
										FrameworkElement.Style="{DynamicResource DTTextBlockCreamBrushStyle}"
										TextBlock.Text="{localization:Translate {x:Static s:StringConsts.STR_XBBINDING_LICENSE_HINT}}" />
								</Border>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</DataTrigger>
			</Style.Triggers>
		</Style>
	</FrameworkElement.Style>
</ToolTip>
