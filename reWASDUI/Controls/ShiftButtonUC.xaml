<UserControl
	x:Class="reWASDUI.Controls.ShiftButtonUC" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:buttons="clr-namespace:DiscSoft.NET.Common.View.Controls.Buttons;assembly=DiscSoft.NET.Common" xmlns:converters="clr-namespace:DiscSoft.NET.Common.Utils.Converters;assembly=DiscSoft.NET.Common" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:enums="clr-namespace:reWASDCommon.Infrastructure.Enums;assembly=reWASDCommon" xmlns:localization="clr-namespace:DiscSoft.NET.Common.Localization;assembly=DiscSoft.NET.Common" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:DTEngine;assembly=DiscSoft.NET.Common" xmlns:viewModels="clr-namespace:reWASDUI.ViewModels" xmlns:controls="clr-namespace:reWASDUI.Controls">
	<Control.Template>
		<ControlTemplate
			TargetType="{x:Type controls:ShiftButtonUC}">
			<Border
				Border.BorderBrush="{DynamicResource ContentBorderBrush}"
				Border.BorderThickness="0,1,0,0">
				<UIElement.Visibility>
					<MultiBinding
						Converter="{converters:MultiBooleanOrConverterToVisibilityConverter}">
						<Binding
							Path="XBBinding.IsJumpToLayerAllowed"
							RelativeSource="{RelativeSource TemplatedParent}" />
						<Binding
							Path="XBBinding.IsTrigger"
							RelativeSource="{RelativeSource TemplatedParent}" />
					</MultiBinding>
				</UIElement.Visibility>
				<buttons:SVGButton
					Name="btnBFShowShift"
					DotMargin="15,15,0,0"
					Drawing="{DynamicResource ShiftMode}"
					IsDotContent="True"
					ToolTipService.ShowOnDisabled="True"
					ButtonBase.Command="{Binding ShowShiftSettingsCommand, RelativeSource={RelativeSource TemplatedParent}}"
					Text="{localization:Translate {x:Static s:StringConsts.STR_SHIFT_MODE}}">
					<UIElement.IsEnabled>
						<MultiBinding
							Converter="{converters:MultiBooleanAndConverter}">
							<Binding
								Path="XBBinding.MaskConditions.Count"
								ConverterParameter="&gt; 0"
								Converter="{converters:ValueSatisfiesRuleParameter}"
								RelativeSource="{RelativeSource TemplatedParent}" />
							<Binding
								Path="XBBinding.MaskConditionsHasZones"
								Converter="{converters:InverseBooleanConverter}"
								RelativeSource="{RelativeSource TemplatedParent}" />
						</MultiBinding>
					</UIElement.IsEnabled>
					<FrameworkElement.Style>
						<Style
							BasedOn="{StaticResource BFNavigationButton}"
							TargetType="{x:Type buttons:SVGButton}">
							<Setter
								Property="buttons:SVGButton.ColorShiftBrush"
								Value="{Binding XBBinding.CurrentActivatorXBBinding.ShiftXBBinding.HostCollection.CollectionBrush, RelativeSource={RelativeSource TemplatedParent}}" />
							<Style.Triggers>
								<Trigger
									Property="UIElement.IsEnabled"
									Value="False">
									<Setter
										Property="FrameworkElement.ToolTip"
										Value="{localization:Translate {x:Static s:StringConsts.STR_SHIFT_BTN_TOOLTIP}}" />
								</Trigger>
								<DataTrigger
									Value="True"
									Binding="{Binding XBBinding.MaskConditionsHasZones, RelativeSource={RelativeSource TemplatedParent}}">
									<Setter
										Property="FrameworkElement.ToolTip"
										Value="{localization:Translate {x:Static s:StringConsts.STR_ZONE_CANT_BE_SHIFT}}" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</FrameworkElement.Style>
					<buttons:SVGButton.DotContent>
						<TextBlock
							UIElement.ClipToBounds="False"
							TextBlock.FontSize="10">
							<FrameworkElement.Style>
								<Style
									TargetType="{x:Type TextBlock}">
									<Setter
										Property="TextBlock.Text"
										Value="{Binding XBBinding.CurrentActivatorXBBinding.JumpToShift, RelativeSource={RelativeSource TemplatedParent}}" />
									<Style.Triggers>
										<DataTrigger
											Value="-1"
											Binding="{Binding XBBinding.CurrentActivatorXBBinding.JumpToShift, RelativeSource={RelativeSource TemplatedParent}}">
											<Setter
												Property="TextBlock.Text"
												Value="N" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</FrameworkElement.Style>
						</TextBlock>
					</buttons:SVGButton.DotContent>
				</buttons:SVGButton>
			</Border>
		</ControlTemplate>
	</Control.Template>
</UserControl>
