<UserControl
	x:Class="reWASDUI.Controls.RemapControl" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:buttons="clr-namespace:DiscSoft.NET.Common.View.Controls.Buttons;assembly=DiscSoft.NET.Common" xmlns:converters="clr-namespace:DiscSoft.NET.Common.Utils.Converters;assembly=DiscSoft.NET.Common" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:enums="clr-namespace:reWASDCommon.Infrastructure.Enums;assembly=reWASDCommon" xmlns:infrastructure="clr-namespace:reWASDUI.Infrastructure" xmlns:l="clr-namespace:DiscSoft.NET.Common.Localization;assembly=DiscSoft.NET.Common" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:DTEngine;assembly=DiscSoft.NET.Common" xmlns:xbEliteWpf="clr-namespace:XBEliteWPF" xmlns:licenseFeatureManaging="clr-namespace:reWASDUI.Controls.LicenseFeatureManaging" xmlns:reWasdui="clr-namespace:reWASDUI" xmlns:controls="clr-namespace:reWASDUI.Controls" xmlns:base1="clr-namespace:reWASDUI.ViewModels.Base">
	<FrameworkElement.Style>
		<Style
			TargetType="{x:Type controls:RemapControl}">
			<Style.Setters>
				<Setter
					Property="controls:RemapControl.XBBinding"
					Value="{Binding GameProfilesService.RealCurrentBeingMappedBindingCollection.CurrentXBBinding}" />
				<Setter
					Property="FrameworkElement.Margin"
					Value="10,0,0,0" />
				<Setter
					Property="Control.Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type controls:RemapControl}">
							<StackPanel>
								<licenseFeatureManaging:LicenseFeatureManagingContainer
									AssociatedFeatureGUID="{x:Static reWasdui:App.ADVANCED_MAPPING_FEATURE_GUID}"
									UIElement.Visibility="{Binding GameProfilesService.RealCurrentBeingMappedBindingCollection.CurrentXBBinding.CurrentActivatorXBBinding.ActivatorType, ConverterParameter='{x:Static enums:ActivatorType.Single}', FallbackValue=Visible, Converter={converters:ValuesAreEqualToVisibilityConverter}}">
									<licenseFeatureManaging:LicenseFeatureManagingContainer.IsFeatureUnlocked>
										<MultiBinding
											Converter="{converters:MultiBooleanOrConverter}">
											<Binding
												Path="LicensingService.IsAdvancedMappingFeatureUnlocked" />
											<Binding
												Path="GamepadService.CurrentGamepad.CurrentController.IsExtendedMappingAvailableConsideringMappings" />
										</MultiBinding>
									</licenseFeatureManaging:LicenseFeatureManagingContainer.IsFeatureUnlocked>
									<buttons:ColoredButton
										Name="btnBFShowGamepadMapping"
										FrameworkElement.Margin="0"
										FrameworkElement.Style="{DynamicResource ButtonSmallXBBindingShiftRecolored}"
										ButtonBase.Command="{Binding ShowRemapCommand, RelativeSource={RelativeSource TemplatedParent}}"
										ContentControl.Content="{l:Translate {x:Static s:StringConsts.STR_NATIVE_NAV}}"
										IsTriggered="{Binding XBBinding.IsRemaped, RelativeSource={RelativeSource TemplatedParent}}"
										ToolTip="{l:Translate {x:Static s:StringConsts.STR_NATIVE_TOOLTIP}}"
										UIElement.Visibility="{Binding XBBinding.IsGamepadMappingAvailiable, RelativeSource={RelativeSource TemplatedParent}, Converter={converters:BooleanToVisibilityConverter}}">
										<ToolTipService.IsEnabled>
											<MultiBinding
												Converter="{converters:MultiBooleanAndConverter}">
												<Binding
													Path="GameProfilesService.CurrentGame.CurrentConfig.IsEditConfigMode" />
												<Binding
													Path="LicensingService.IsAdvancedMappingFeatureUnlocked" />
											</MultiBinding>
										</ToolTipService.IsEnabled>
									</buttons:ColoredButton>
								</licenseFeatureManaging:LicenseFeatureManagingContainer>
							</StackPanel>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style.Setters>
		</Style>
	</FrameworkElement.Style>
</UserControl>
