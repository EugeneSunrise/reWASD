<Button
	x:Class="reWASDUI.Controls.OverlaySectorButtonUC" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:buttons="clr-namespace:DiscSoft.NET.Common.View.Controls.Buttons;assembly=DiscSoft.NET.Common" xmlns:converters="clr-namespace:DiscSoft.NET.Common.Utils.Converters;assembly=DiscSoft.NET.Common" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:enums="clr-namespace:reWASDCommon.Infrastructure.Enums;assembly=reWASDCommon" xmlns:localization="clr-namespace:DiscSoft.NET.Common.Localization;assembly=DiscSoft.NET.Common" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:DTEngine;assembly=DiscSoft.NET.Common" xmlns:viewModels="clr-namespace:reWASDUI.ViewModels" xmlns:controls="clr-namespace:reWASDUI.Controls" xmlns:checkBoxes="clr-namespace:DiscSoft.NET.Common.View.Controls.CheckBoxes;assembly=DiscSoft.NET.Common" xmlns:infrastructure1="clr-namespace:reWASDUI.Infrastructure" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:controls1="clr-namespace:DiscSoft.NET.Common.View.Controls;assembly=DiscSoft.NET.Common" xmlns:recolorableimages="clr-namespace:DiscSoft.NET.Common.View.RecolorableImages;assembly=DiscSoft.NET.Common"
	MouseEnter="OnMouseEnter"
	MouseLeave="OnMouseLeave">
	<Control.Template>
		<ControlTemplate
			TargetType="{x:Type controls:OverlaySectorButtonUC}">
			<Grid>
				<Canvas>
					<Path
						Name="backgroundElement"
						Canvas.Left="0"
						Canvas.Top="0"
						Panel.ZIndex="1"
						Shape.Fill="{DynamicResource OverlayItemButtonsForeground}"
						Shape.Stroke="#80000000"
						Shape.StrokeThickness="0">
						<Path.Data>
							<CombinedGeometry
								GeometryCombineMode="Intersect">
								<CombinedGeometry.Geometry1>
									<GeometryGroup
										FillRule="EvenOdd">
										<EllipseGeometry
											RadiusX="{Binding InnerRadius, RelativeSource={RelativeSource TemplatedParent}}"
											RadiusY="{Binding InnerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
										<EllipseGeometry
											RadiusX="{Binding OuterRadius, RelativeSource={RelativeSource TemplatedParent}}"
											RadiusY="{Binding OuterRadius, RelativeSource={RelativeSource TemplatedParent}}" />
									</GeometryGroup>
								</CombinedGeometry.Geometry1>
								<CombinedGeometry.Geometry2>
									<GeometryGroup
										FillRule="Nonzero">
										<PathGeometry>
											<PathFigure
												IsClosed="True"
												IsFilled="True"
												StartPoint="{Binding GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.CurrentSector.si.P1}">
												<PathFigure.Segments>
													<LineSegment
														Point="{Binding GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.CurrentSector.si.PC}" />
													<LineSegment
														Point="{Binding GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.CurrentSector.si.P2}" />
												</PathFigure.Segments>
											</PathFigure>
										</PathGeometry>
									</GeometryGroup>
								</CombinedGeometry.Geometry2>
							</CombinedGeometry>
						</Path.Data>
						<UIElement.RenderTransform>
							<TranslateTransform
								X="{Binding GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.BigRadius}"
								Y="{Binding GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.BigRadius}" />
						</UIElement.RenderTransform>
					</Path>
				</Canvas>
				<Canvas>
					<Border
						FrameworkElement.Width="32"
						FrameworkElement.Height="32"
						Canvas.Left="{Binding PosX, RelativeSource={RelativeSource TemplatedParent}}"
						Canvas.Top="{Binding PosY, RelativeSource={RelativeSource TemplatedParent}}">
						<recolorableimages:RecolorableSVG
							Drawing="{DynamicResource AddConfig}"
							FrameworkElement.Width="12"
							FrameworkElement.Height="12"
							IsColorShift="True"
							ColorShiftBrush="{DynamicResource ContentBackground}" />
					</Border>
				</Canvas>
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger
					Property="UIElement.IsMouseOver"
					Value="true">
					<Setter
						TargetName="backgroundElement"
						Value="{DynamicResource OverlayItemHoverForeground}"
						Property="Shape.Fill" />
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
	</Control.Template>
</Button>
