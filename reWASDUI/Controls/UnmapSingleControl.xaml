<UserControl
	x:Class="reWASDUI.Controls.UnmapSingleControl" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:buttons="clr-namespace:DiscSoft.NET.Common.View.Controls.Buttons;assembly=DiscSoft.NET.Common" xmlns:converters="clr-namespace:DiscSoft.NET.Common.Utils.Converters;assembly=DiscSoft.NET.Common" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:enums="clr-namespace:reWASDCommon.Infrastructure.Enums;assembly=reWASDCommon" xmlns:l="clr-namespace:DiscSoft.NET.Common.Localization;assembly=DiscSoft.NET.Common" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:DTEngine;assembly=DiscSoft.NET.Common" xmlns:xbEliteWpf="clr-namespace:XBEliteWPF" xmlns:licenseFeatureManaging="clr-namespace:reWASDUI.Controls.LicenseFeatureManaging" xmlns:reWasdui="clr-namespace:reWASDUI" xmlns:controls="clr-namespace:reWASDUI.Controls" xmlns:base1="clr-namespace:reWASDUI.ViewModels.Base">
	<FrameworkElement.Style>
		<Style
			TargetType="{x:Type controls:UnmapSingleControl}">
			<Setter
				Property="Control.Template">
				<Setter.Value>
					<ControlTemplate
						TargetType="{x:Type controls:UnmapSingleControl}">
						<licenseFeatureManaging:LicenseFeatureManagingContainer
							x:Name="licenseContainer"
							AssociatedFeatureGUID="{x:Static reWasdui:App.ADVANCED_MAPPING_FEATURE_GUID}">
							<licenseFeatureManaging:LicenseFeatureManagingContainer.IsFeatureUnlocked>
								<MultiBinding
									Converter="{converters:MultiBooleanOrConverter}">
									<Binding
										Path="LicensingService.IsAdvancedMappingFeatureUnlocked" />
									<Binding
										Path="GamepadService.CurrentGamepad.CurrentController.IsUnmapAvailableConsideringMappings" />
									<Binding
										Path="XBBinding.IsUnmapped"
										RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding
										Path="GameProfilesService.RealCurrentBeingMappedBindingCollection.SubConfigData.IsPeripheral" />
								</MultiBinding>
							</licenseFeatureManaging:LicenseFeatureManagingContainer.IsFeatureUnlocked>
							<buttons:ColoredButton
								Name="btnUnmap"
								FrameworkElement.Margin="0"
								FrameworkElement.Style="{DynamicResource ButtonSmallXBBindingShiftRecolored}"
								ToolTipService.ShowOnDisabled="True"
								ButtonBase.Command="{Binding XBBinding.UnmapCommand, RelativeSource={RelativeSource TemplatedParent}}"
								ContentControl.Content="{l:Translate {x:Static s:StringConsts.STR_MUTE}}"
								UIElement.IsEnabled="{Binding GameProfilesService.CurrentGame.CurrentConfig.IsEditConfigMode}"
								IsTriggered="{Binding XBBinding.IsUnmapped, RelativeSource={RelativeSource TemplatedParent}}"
								ToolTip="{l:Translate {x:Static s:StringConsts.STR_MUTE_TOOLTIP}}">
								<ToolTipService.IsEnabled>
									<MultiBinding
										Converter="{converters:MultiBooleanAndConverter}">
										<Binding
											Path="GameProfilesService.CurrentGame.CurrentConfig.IsEditConfigMode" />
										<Binding
											Path="IsFeatureUnlocked"
											ElementName="licenseContainer" />
									</MultiBinding>
								</ToolTipService.IsEnabled>
							</buttons:ColoredButton>
						</licenseFeatureManaging:LicenseFeatureManagingContainer>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<DataTrigger
					Value="True">
					<DataTrigger.Binding>
						<MultiBinding
							Converter="{converters:MultiBooleanOrConverter}">
							<Binding
								Path="XBBinding.CurrentActivatorXBBinding.ActivatorType"
								ConverterParameter="{x:Static enums:ActivatorType.Single}"
								Converter="{converters:ValuesAreNotEqual}"
								RelativeSource="{RelativeSource Self}" />
							<Binding
								Path="XBBinding.ControllerButton.IsUnmapAvailiable"
								FallbackValue="False"
								Converter="{converters:InverseBooleanConverter}"
								RelativeSource="{RelativeSource Self}" />
							<Binding
								Path="GameProfilesService.RealCurrentBeingMappedBindingCollection.SubConfigData.IsUnmapAvailable"
								Converter="{converters:InverseBooleanConverter}" />
						</MultiBinding>
					</DataTrigger.Binding>
					<Setter
						Property="UIElement.Visibility"
						Value="Collapsed" />
				</DataTrigger>
			</Style.Triggers>
		</Style>
	</FrameworkElement.Style>
</UserControl>
