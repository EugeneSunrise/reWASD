<UserControl
	x:Class="reWASDUI.Views.SecondaryWindows.CalibrateGyroscope.CalibrateGyroProcessing" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:buttons="clr-namespace:DiscSoft.NET.Common.View.Controls.Buttons;assembly=DiscSoft.NET.Common" xmlns:controls="clr-namespace:DiscSoft.NET.Common.View.Controls;assembly=DiscSoft.NET.Common" xmlns:converters="clr-namespace:DiscSoft.NET.Common.Utils.Converters;assembly=DiscSoft.NET.Common" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:l="clr-namespace:DiscSoft.NET.Common.Localization;assembly=DiscSoft.NET.Common" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:recolorableImages="clr-namespace:DiscSoft.NET.Common.View.RecolorableImages;assembly=DiscSoft.NET.Common" xmlns:s="clr-namespace:DTEngine;assembly=DiscSoft.NET.Common"
	FrameworkElement.Height="346" xmlns:calibrategyroscope="clr-namespace:reWASDUI.Views.SecondaryWindows.CalibrateGyroscope">
	<Grid>
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition
					RowDefinition.Height="*" />
				<RowDefinition
					RowDefinition.Height="70" />
			</Grid.RowDefinitions>
			<Grid
				UIElement.Visibility="{Binding IsFinished, Converter={converters:BooleanToVisibilityConverter}}">
				<recolorableImages:RecolorableSVG
					FrameworkElement.HorizontalAlignment="Left"
					Drawing="{DynamicResource Calibrate_done}"
					FrameworkElement.Style="{DynamicResource WizardImage}"
					UIElement.Visibility="{Binding IsCalibrated, Converter={converters:BooleanToVisibilityConverter}}" />
				<recolorableImages:RecolorableSVG
					FrameworkElement.HorizontalAlignment="Left"
					Drawing="{DynamicResource Calibration_error}"
					FrameworkElement.Style="{DynamicResource WizardImage}"
					UIElement.Visibility="{Binding IsCalibrated, Converter={converters:InvertedBooleanToVisibilityConverter}}" />
			</Grid>
			<Grid>
				<StackPanel
					FrameworkElement.HorizontalAlignment="Center"
					FrameworkElement.VerticalAlignment="Center"
					Orientation="Horizontal"
					UIElement.Visibility="{Binding IsFinished, Converter={converters:InvertedBooleanToVisibilityConverter}}">
					<controls:RotatingContentControl
						FrameworkElement.HorizontalAlignment="Left"
						FrameworkElement.VerticalAlignment="Center"
						RotationCycleMS="1500">
						<controls:CircularProgressBar
							Diameter="28"
							DiameterWithMargin="30"
							FrameworkElement.Style="{DynamicResource IndeterminateCircularProgressBar}"
							UIElement.Visibility="{Binding IsFinished, FallbackValue=Collapsed, Converter={converters:InvertedBooleanToVisibilityConverter}}" />
					</controls:RotatingContentControl>
					<TextBlock
						FrameworkElement.Margin="10,0,0,0"
						FrameworkElement.VerticalAlignment="Center"
						TextAlignment="Center"
						TextBlock.Text="{l:Translate {x:Static s:StringConsts.STR_DATA_FETCHING}}" />
				</StackPanel>
				<StackPanel
					FrameworkElement.HorizontalAlignment="Center"
					FrameworkElement.VerticalAlignment="Center"
					UIElement.Visibility="{Binding IsFinished, Converter={converters:BooleanToVisibilityConverter}}">
					<StackPanel>
						<TextBlock
							TextAlignment="Left"
							FrameworkElement.HorizontalAlignment="Center"
							FrameworkElement.Margin="197,0,60,0"
							TextBlock.TextWrapping="Wrap"
							TextBlock.Text="{l:Translate {x:Static s:StringConsts.STR_DONE}}"
							UIElement.Visibility="{Binding IsCalibrated, Converter={converters:BooleanToVisibilityConverter}}" />
						<TextBlock
							TextAlignment="Left"
							FrameworkElement.HorizontalAlignment="Center"
							FrameworkElement.Margin="197,0,60,0"
							TextBlock.TextWrapping="Wrap"
							TextBlock.Text="{l:Translate {x:Static s:StringConsts.STR_CALIBRATION_FAILED}}"
							UIElement.Visibility="{Binding IsCalibrated, Converter={converters:InvertedBooleanToVisibilityConverter}}" />
					</StackPanel>
				</StackPanel>
			</Grid>
			<Border
				Grid.Row="1"
				Grid.ColumnSpan="2"
				FrameworkElement.Style="{DynamicResource WizardFooterBorderStyle}">
				<Grid>
					<buttons:ColoredButton
						FrameworkElement.HorizontalAlignment="Right"
						FrameworkElement.Style="{DynamicResource WizardFooterButton}"
						ButtonBase.Command="{Binding NextCommand}"
						ContentControl.Content="{l:Translate {x:Static s:StringConsts.STR_5017_NEXT}}"
						UIElement.IsEnabled="{Binding IsFinished}"
						UIElement.Visibility="{Binding IsFinished, Converter={converters:InvertedBooleanToVisibilityConverter}}" />
					<Grid
						UIElement.Visibility="{Binding IsFinished, Converter={converters:BooleanToVisibilityConverter}}">
						<buttons:ColoredButton
							FrameworkElement.HorizontalAlignment="Right"
							FrameworkElement.Style="{DynamicResource WizardFooterButton}"
							ButtonBase.Command="{Binding OkCommand}"
							ContentControl.Content="{l:Translate {x:Static s:StringConsts.STR_5019_FINISH}}"
							UIElement.Visibility="{Binding IsCalibrated, Converter={converters:BooleanToVisibilityConverter}}" />
						<buttons:ColoredButton
							FrameworkElement.HorizontalAlignment="Right"
							FrameworkElement.Style="{DynamicResource WizardFooterButton}"
							ButtonBase.Command="{Binding TryAgainCommand}"
							ContentControl.Content="{l:Translate {x:Static s:StringConsts.STR_5020_TRY_AGAIN}}"
							UIElement.Visibility="{Binding IsCalibrated, Converter={converters:InvertedBooleanToVisibilityConverter}}" />
					</Grid>
					<buttons:ColoredButton
						FrameworkElement.HorizontalAlignment="Left"
						FrameworkElement.Style="{DynamicResource WizardFooterButton}"
						ButtonBase.Command="{Binding CancelCommand}"
						ContentControl.Content="{l:Translate {x:Static s:StringConsts.STR_5003_CLOSE}}"
						UIElement.Visibility="{Binding IsCalibrated, Converter={converters:InvertedBooleanToVisibilityConverter}}" />
				</Grid>
			</Border>
		</Grid>
	</Grid>
</UserControl>
