<base:BaseSecondaryWindow
	x:Class="reWASDUI.Views.SecondaryWindows.AddImportConfig" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:attachedBehaviours="clr-namespace:DiscSoft.NET.Common.Utils.AttachedBehaviours;assembly=DiscSoft.NET.Common" xmlns:base="clr-namespace:DiscSoft.NET.Common.View.SecondaryWindows.Base;assembly=DiscSoft.NET.Common" xmlns:buttons="clr-namespace:DiscSoft.NET.Common.View.Controls.Buttons;assembly=DiscSoft.NET.Common" xmlns:controls="clr-namespace:DiscSoft.NET.Common.View.Controls;assembly=DiscSoft.NET.Common" xmlns:converters="clr-namespace:DiscSoft.NET.Common.Utils.Converters;assembly=DiscSoft.NET.Common" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:enums="clr-namespace:reWASDCommon.Infrastructure.Enums;assembly=reWASDCommon" xmlns:l="clr-namespace:DiscSoft.NET.Common.Localization;assembly=DiscSoft.NET.Common" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:DTEngine;assembly=DiscSoft.NET.Common" xmlns:utils="clr-namespace:DiscSoft.NET.Common.Utils;assembly=DiscSoft.NET.Common" xmlns:secondaryWindows="clr-namespace:reWASDUI.ViewModels.SecondaryWindows"
	FrameworkElement.Width="400"
	FrameworkElement.MaxWidth="400"
	attachedBehaviours:FocusBehavior.FocusFirst="true"
	AutomationProperties.AutomationId="AddImportConfig"
	SizeToContent="Height"
	FrameworkElement.Style="{DynamicResource SecondaryWindowStyle}" xmlns:secondarywindows="clr-namespace:reWASDUI.Views.SecondaryWindows"
	Title="{l:Translate {x:Static s:StringConsts.IDS_ADD_NEW_CONFIG}}">
	<StackPanel>
		<StackPanel
			FrameworkElement.Style="{DynamicResource SecondaryWindowContentGridStyle}">
			<FrameworkElement.Resources>
				<converters:EnumToBooleanConverter
					x:Key="EnumToBooleanConverter" />
			</FrameworkElement.Resources>
			<RadioButton
				FrameworkElement.Name="CreateNewRadioBtn"
				ContentControl.Content="{l:Translate {x:Static s:StringConsts.IDS_CREATE_NEW_CONFIG}}"
				IsChecked="{Binding Path=ConfigType, Converter='{StaticResource EnumToBooleanConverter}', ConverterParameter='{x:Static enums:ConfigType.New}'}"
				x:Name="CreateNewRadioBtn" />
			<RadioButton
				FrameworkElement.Name="importRadioBtn"
				ContentControl.Content="{l:Translate {x:Static s:StringConsts.IDS_IMPORT_FROM_FILE}}"
				IsChecked="{Binding Path=ConfigType, Converter='{StaticResource EnumToBooleanConverter}', ConverterParameter='{x:Static enums:ConfigType.Import}'}"
				x:Name="importRadioBtn" />
			<Grid
				FrameworkElement.Margin="15,0,0,0"
				UIElement.IsEnabled="{Binding IsChecked, ElementName=importRadioBtn}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition
						ColumnDefinition.Width="*" />
					<ColumnDefinition
						ColumnDefinition.Width="Auto" />
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition
						RowDefinition.Height="Auto" />
					<RowDefinition
						RowDefinition.Height="Auto" />
				</Grid.RowDefinitions>
				<controls:WaterMarkTextBox
					FrameworkElement.Name="importTextBox"
					Grid.Row="0"
					Grid.Column="0"
					IsReadOnly="True"
					TextBox.Text="{Binding ConfigVM.ConfigPath, UpdateSourceTrigger=PropertyChanged}"
					x:Name="importTextBox" />
				<buttons:ColoredButton
					FrameworkElement.Name="importButton"
					Grid.Row="0"
					Grid.Column="1"
					FrameworkElement.Style="{DynamicResource ButtonBrowse}"
					ButtonBase.Command="{Binding ImportConfigCommand}"
					ButtonBase.CommandParameter="{Binding ConfigVM.ConfigPath, Mode=OneWay}"
					x:Name="importButton" />
			</Grid>
			<TextBlock
				FrameworkElement.Name="OpenCommunityTextBlock"
				FrameworkElement.Margin="15,0,0,0"
				FrameworkElement.HorizontalAlignment="Left"
				FrameworkElement.Style="{DynamicResource DTTextBlockStyle}"
				utils:NavigationServiceHTML.Command="{Binding OpenCommunityCommand}"
				utils:NavigationServiceHTML.Text="{l:Translate {x:Static s:StringConsts.STR_IMPORT_COMMUNITY_TIP}}"
				x:Name="OpenCommunityTextBlock" />
		</StackPanel>
		<StackPanel
			FrameworkElement.Style="{DynamicResource SecondaryWindowContentGridStyle}">
			<TextBlock
				FrameworkElement.Name="ConfigNameTextBlock"
				FrameworkElement.Style="{DynamicResource DTTextBlockStyle}"
				TextBlock.Text="{l:Translate {x:Static s:StringConsts.STRING_CONFIG_NAME}}"
				x:Name="ConfigNameTextBlock" />
			<controls:WaterMarkTextBox
				FrameworkElement.Name="ConfigNameTextBox"
				attachedBehaviours:FocusBehavior.InitialyFocused="True"
				MaxLength="64"
				TextBox.Text="{Binding ConfigVM.Name, UpdateSourceTrigger=PropertyChanged}"
				x:Name="ConfigNameTextBox" />
		</StackPanel>
		<Border
			FrameworkElement.Style="{DynamicResource SecondaryWindowFooterBorderStyle}">
			<StackPanel
				Orientation="Horizontal"
				FrameworkElement.Style="{DynamicResource SecondaryWindowFooterContainerStyle}">
				<!--Присоединяемое событие 'add_Click'.-->
				<buttons:ColoredButton
					FrameworkElement.Name="OkButton"
					FrameworkElement.Margin="10,0,0,0"
					FrameworkElement.Style="{DynamicResource Button}"
					ContentControl.Content="{l:Translate {x:Static s:StringConsts.STR_5004_OK}}"
					UIElement.IsEnabled="{Binding IsImportAllowed}"
					x:Name="OkButton" />
				<!--Присоединяемое событие 'add_Click'.-->
				<buttons:ColoredButton
					FrameworkElement.Name="CancelButton"
					FrameworkElement.Margin="10,0,0,0"
					FrameworkElement.Style="{DynamicResource Button}"
					ContentControl.Content="{l:Translate {x:Static s:StringConsts.STR_5005_CANCEL}}"
					x:Name="CancelButton" />
			</StackPanel>
		</Border>
	</StackPanel>
</base:BaseSecondaryWindow>
