<base:BaseSecondaryWindow
	x:Class="reWASDUI.Views.SecondaryWindows.ImportConfig" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:attachedBehaviours="clr-namespace:DiscSoft.NET.Common.Utils.AttachedBehaviours;assembly=DiscSoft.NET.Common" xmlns:base="clr-namespace:DiscSoft.NET.Common.View.SecondaryWindows.Base;assembly=DiscSoft.NET.Common" xmlns:buttons="clr-namespace:DiscSoft.NET.Common.View.Controls.Buttons;assembly=DiscSoft.NET.Common" xmlns:comboBoxes="clr-namespace:DiscSoft.NET.Common.View.Controls.ComboBoxes;assembly=DiscSoft.NET.Common" xmlns:controls="clr-namespace:DiscSoft.NET.Common.View.Controls;assembly=DiscSoft.NET.Common" xmlns:converters="clr-namespace:DiscSoft.NET.Common.Utils.Converters;assembly=DiscSoft.NET.Common" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:localization="clr-namespace:DiscSoft.NET.Common.Localization;assembly=DiscSoft.NET.Common" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:radioButtons="clr-namespace:DiscSoft.NET.Common.View.Controls.RadioButtons;assembly=DiscSoft.NET.Common" xmlns:s="clr-namespace:DTEngine;assembly=DiscSoft.NET.Common" xmlns:secondaryWindows="clr-namespace:reWASDUI.Views.SecondaryWindows"
	FrameworkElement.Height="490"
	FrameworkElement.MinWidth="350"
	FrameworkElement.MaxWidth="350"
	attachedBehaviours:FocusBehavior.FocusFirst="true"
	AutomationProperties.AutomationId="ImportConfig"
	SizeToContent="Height"
	FrameworkElement.Style="{DynamicResource SecondaryWindowStyle}"
	Title="{localization:Translate {x:Static s:StringConsts.STR_IMPORT_CONFIG}}">
	<StackPanel>
		<StackPanel
			FrameworkElement.Style="{DynamicResource SecondaryWindowContentGridStyle}">
			<StackPanel
				UIElement.Visibility="{Binding IsCloning, Converter={converters:InvertedBooleanToVisibilityConverter}}">
				<TextBlock
					FrameworkElement.Style="{DynamicResource DTTextBlockStyle}"
					TextBlock.Text="{localization:Translate {x:Static s:StringConsts.STR_PROFILE_FILE_NAME}}" />
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							ColumnDefinition.Width="*" />
						<ColumnDefinition
							ColumnDefinition.Width="Auto" />
					</Grid.ColumnDefinitions>
					<controls:WaterMarkTextBox
						Grid.Column="0"
						IsReadOnly="True"
						TextBox.Text="{Binding ConfigSourcePath, UpdateSourceTrigger=PropertyChanged}" />
					<buttons:ColoredButton
						Grid.Column="1"
						FrameworkElement.Style="{DynamicResource ButtonBrowse}"
						Click="ButtonBase_BrowseClick" />
				</Grid>
				<TextBlock
					FrameworkElement.Margin="0,26,0,0"
					FrameworkElement.Style="{DynamicResource DTTextBlockStyle}"
					TextBlock.Text="{localization:Translate {x:Static s:StringConsts.STRING_CONFIG_NAME}}" />
				<controls:WaterMarkTextBox
					MaxLength="64"
					UIElement.IsEnabled="{Binding IsSourceSelected}"
					TextBox.Text="{Binding ConfigName, UpdateSourceTrigger=PropertyChanged}" />
			</StackPanel>
			<GroupBox
				FrameworkElement.Name="groupBox"
				FrameworkElement.Margin="0,20,0,0"
				UIElement.IsEnabled="{Binding IsSourceSelected}"
				x:Name="groupBox">
				<FrameworkElement.Style>
					<Style
						BasedOn="{StaticResource {x:Type GroupBox}}"
						TargetType="{x:Type GroupBox}">
						<Style.Triggers>
							<DataTrigger
								Value="True"
								Binding="{Binding IsCloning}">
								<Setter
									Property="HeaderedContentControl.Header"
									Value="{localization:Translate {x:Static s:StringConsts.STR_CLONE_TO_PROFILE}}" />
								<Setter
									Property="AutomationProperties.AutomationId"
									Value="CloneToProfile" />
							</DataTrigger>
							<DataTrigger
								Value="False"
								Binding="{Binding IsCloning}">
								<Setter
									Property="HeaderedContentControl.Header"
									Value="{localization:Translate {x:Static s:StringConsts.STR_ADD_TO_PROFILE}}" />
								<Setter
									Property="AutomationProperties.AutomationId"
									Value="AddToProfile" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</FrameworkElement.Style>
				<StackPanel>
					<radioButtons:ImageRadioButton
						Name="UseExisting"
						ContentControl.Content="{localization:Translate {x:Static s:StringConsts.STR_CHOOSE_FROM_EXISTING}}"
						IsChecked="{Binding IsUseExisting}" />
					<comboBoxes:ColoredComboBox
						Name="UseExistingComboBox"
						FrameworkElement.Margin="0,6,0,0"
						FrameworkElement.HorizontalAlignment="Stretch"
						FrameworkElement.VerticalAlignment="Center"
						UIElement.IsEnabled="{Binding IsUseExisting}"
						ItemsControl.ItemsSource="{Binding GamesCollection}"
						SelectedItem="{Binding SelectedGame}">
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<ContentControl
									AutomationProperties.AutomationId="{Binding Name}"
									ContentControl.Content="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</comboBoxes:ColoredComboBox>
					<radioButtons:ImageRadioButton
						Name="CreateNew"
						FrameworkElement.Margin="0,26,0,0"
						ContentControl.Content="{localization:Translate {x:Static s:StringConsts.STR_CREATE_NEW}}"
						IsChecked="{Binding IsCreateNew}" />
					<StackPanel
						FrameworkElement.Margin="0,6,0,0"
						UIElement.IsEnabled="{Binding IsCreateNew}">
						<TextBlock
							FrameworkElement.Name="GameNameTextBlock"
							FrameworkElement.Style="{DynamicResource DTTextBlockStyle}"
							TextBlock.Text="{localization:Translate {x:Static s:StringConsts.STRING_PROFILE_NAME}}"
							x:Name="GameNameTextBlock" />
						<controls:WaterMarkTextBox
							FrameworkElement.Name="GameNameTextBox"
							MaxLength="64"
							TextBox.Text="{Binding NewProfileName, UpdateSourceTrigger=PropertyChanged}"
							x:Name="GameNameTextBox" />
						<TextBlock
							FrameworkElement.Name="BoxArtTextBlock"
							FrameworkElement.Margin="0,26,0,0"
							FrameworkElement.Style="{DynamicResource DTTextBlockStyle}"
							TextBlock.Text="{localization:Translate {x:Static s:StringConsts.STRING_BOXART}}"
							x:Name="BoxArtTextBlock" />
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition
									ColumnDefinition.Width="*" />
								<ColumnDefinition
									ColumnDefinition.Width="Auto" />
							</Grid.ColumnDefinitions>
							<controls:WaterMarkTextBox
								FrameworkElement.Name="BoxArtTextBox"
								Grid.Column="0"
								IsReadOnly="True"
								TextBox.Text="{Binding BoxArtPath, UpdateSourceTrigger=PropertyChanged}"
								x:Name="BoxArtTextBox" />
							<buttons:ColoredButton
								FrameworkElement.Name="BoxArtButton"
								Grid.Column="1"
								FrameworkElement.Style="{DynamicResource ButtonBrowse}"
								x:Name="BoxArtButton"
								Click="ButtonBoxArt_BrowseClick" />
						</Grid>
						<TextBlock
							FrameworkElement.Name="BoxArtTip"
							FrameworkElement.Style="{DynamicResource DTTextBlockStyle}"
							TextBlock.Text="{localization:Translate {x:Static s:StringConsts.STRING_BOXART_TIP}}"
							x:Name="BoxArtTip" />
					</StackPanel>
				</StackPanel>
			</GroupBox>
		</StackPanel>
		<Border
			FrameworkElement.Margin="0,15,5,0"
			FrameworkElement.Style="{DynamicResource SecondaryWindowFooterBorderStyle}">
			<StackPanel
				Orientation="Horizontal"
				FrameworkElement.Style="{DynamicResource SecondaryWindowFooterContainerStyle}">
				<!--Присоединяемое событие 'add_Click'.-->
				<buttons:ColoredButton
					FrameworkElement.Name="ButtonOk"
					FrameworkElement.Margin="0"
					Control.Padding="10,5"
					x:Name="ButtonOk">
					<FrameworkElement.Style>
						<Style
							BasedOn="{StaticResource Button}"
							TargetType="{x:Type buttons:ColoredButton}">
							<Style.Triggers>
								<DataTrigger
									Value="True"
									Binding="{Binding IsCloning}">
									<Setter
										Property="ContentControl.Content"
										Value="{localization:Translate {x:Static s:StringConsts.STR_CLONE}}" />
								</DataTrigger>
								<DataTrigger
									Value="False"
									Binding="{Binding IsCloning}">
									<Setter
										Property="ContentControl.Content"
										Value="{localization:Translate {x:Static s:StringConsts.STR_IMPORT}}" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</FrameworkElement.Style>
				</buttons:ColoredButton>
				<!--Присоединяемое событие 'add_Click'.-->
				<buttons:ColoredButton
					FrameworkElement.Name="ButtonCancel"
					FrameworkElement.Margin="10,0,0,0"
					Control.Padding="10,5"
					FrameworkElement.Style="{DynamicResource Button}"
					ContentControl.Content="{localization:Translate {x:Static s:StringConsts.STR_5005_CANCEL}}"
					x:Name="ButtonCancel" />
			</StackPanel>
		</Border>
	</StackPanel>
</base:BaseSecondaryWindow>
