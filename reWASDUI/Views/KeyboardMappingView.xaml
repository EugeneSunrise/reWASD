<controls:BaseServicesDataContextControl
	x:Class="reWASDUI.Views.KeyboardMappingView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:bindingFrame="clr-namespace:reWASDUI.Controls.XBBindingControls.BindingFrame" xmlns:bindingFrameViews="clr-namespace:reWASDUI.Controls.XBBindingControls.BindingFrame.BindingFrameViews" xmlns:buttons="clr-namespace:DiscSoft.NET.Common.View.Controls.Buttons;assembly=DiscSoft.NET.Common" xmlns:comboBoxes="clr-namespace:DiscSoft.NET.Common.View.Controls.ComboBoxes;assembly=DiscSoft.NET.Common" xmlns:controls="clr-namespace:reWASDUI.Controls" xmlns:converters="clr-namespace:DiscSoft.NET.Common.Utils.Converters;assembly=DiscSoft.NET.Common" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:enums="clr-namespace:reWASDCommon.Infrastructure.Enums;assembly=reWASDCommon" xmlns:l="clr-namespace:DiscSoft.NET.Common.Localization;assembly=DiscSoft.NET.Common" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:prism="http://prismlibrary.com/" xmlns:recolorableImages="clr-namespace:DiscSoft.NET.Common.View.RecolorableImages;assembly=DiscSoft.NET.Common" xmlns:s="clr-namespace:DTEngine;assembly=DiscSoft.NET.Common" xmlns:utils="clr-namespace:DiscSoft.NET.Common.Utils;assembly=DiscSoft.NET.Common" xmlns:viewModels="clr-namespace:reWASDUI.ViewModels" xmlns:xbEliteWpf="clr-namespace:XBEliteWPF"
	MouseDown="OnMouseDown" xmlns:mvvm="clr-namespace:Prism.Mvvm;assembly=Prism.Wpf"
	mvvm:ViewModelLocator.AutoWireViewModel="True" xmlns:views="clr-namespace:reWASDUI.Views">
	<FrameworkElement.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary
					Source="..\..\Controls\XBBindingControls\BindingFrame\BindingFrameTemplates\BFControllerBindingButtonTemplate.xaml" />
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</FrameworkElement.Resources>
	<Grid>
		<Grid
			UIElement.Visibility="{Binding IsHitTestVisible, Converter={converters:BooleanToVisibilityConverter}, RelativeSource={RelativeSource Self}}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition
					ColumnDefinition.Width="*" />
				<ColumnDefinition
					ColumnDefinition.Width="Auto" />
			</Grid.ColumnDefinitions>
			<Grid
				Column="0"
				FrameworkElement.MaxWidth="1200"
				FrameworkElement.Margin="62,0,0,0">
				<Grid.RowDefinitions>
					<RowDefinition
						RowDefinition.Height="0.79*" />
					<RowDefinition
						RowDefinition.Height="Auto" />
					<RowDefinition
						RowDefinition.Height="Auto" />
					<RowDefinition
						RowDefinition.Height="3*" />
					<RowDefinition
						RowDefinition.Height="0.59*" />
				</Grid.RowDefinitions>
				<Border
					Grid.Row="1"
					Border.Background="{DynamicResource MacroHeaderBackground}">
					<Grid
						FrameworkElement.Margin="16,16">
						<buttons:ColoredButton
							Name="AddBtn"
							FrameworkElement.Margin="0"
							FrameworkElement.HorizontalAlignment="Left"
							FrameworkElement.VerticalAlignment="Center"
							FrameworkElement.Style="{DynamicResource ShiftColoredButton}"
							ButtonBase.Command="{Binding GameProfilesService.CurrentKeyboardBindingCollection.AddControllerBindingCommand}"
							ContentControl.Content="{l:Translate {x:Static s:StringConsts.STR_ADD}}"
							UIElement.IsEnabled="{Binding GameProfilesService.CurrentGame.CurrentConfig.IsEditConfigMode}" />
						<StackPanel
							FrameworkElement.HorizontalAlignment="Right"
							FrameworkElement.VerticalAlignment="Center"
							Orientation="Horizontal"
							UIElement.Visibility="{Binding GameProfilesService.CurrentKeyboardBindingCollection.SubConfigData.IsGamepad, Converter={converters:InvertedBooleanToVisibilityConverter}}">
							<TextBlock
								Name="FilterTB"
								FrameworkElement.Margin="0,0,10,0"
								FrameworkElement.VerticalAlignment="Center"
								FrameworkElement.Style="{DynamicResource DTTextBlockStyle}"
								TextBlock.Text="{l:Translate {x:Static s:StringConsts.STR_FILTER_CC}}" />
							<comboBoxes:ColoredComboBox
								Name="FilterCB"
								FrameworkElement.MinWidth="210"
								ItemsControl.ItemTemplate="{DynamicResource LocalizedDescriptionDataTemplate}"
								FrameworkElement.Style="{DynamicResource ShiftColoredComboBox}"
								ItemsControl.ItemsSource="{Binding GameProfilesService.CurrentKeyboardBindingCollection.ControllerBindings.AvailiableControllerButtonTags}"
								SelectedItem="{Binding GameProfilesService.CurrentKeyboardBindingCollection.ControllerBindings.ControllerButtonTag}" />
						</StackPanel>
					</Grid>
				</Border>
				<Border
					Grid.Row="3"
					Border.Background="{DynamicResource MacroContentBackground}">
					<Grid>
						<Grid
							Name="ControllerBindingsGrid"
							IsSharedSizeScope="True"
							UIElement.Visibility="{Binding Path=GameProfilesService.CurrentKeyboardBindingCollection.ControllerBindings.FilteredMasks.Count, ConverterParameter='> 0', Converter={converters:ValueSatisfiesRuleParameterToVisibilityConverter}}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition
									ColumnDefinition.Width="5*" />
								<ColumnDefinition
									ColumnDefinition.Width="330" />
								<ColumnDefinition
									ColumnDefinition.Width="Auto"
									ColumnDefinition.MinWidth="62"
									SharedSizeGroup="miEditControls" />
							</Grid.ColumnDefinitions>
							<ListBox
								Name="keyMappingsItemsControl"
								Grid.Column="0"
								Grid.ColumnSpan="3"
								ScrollViewer.CanContentScroll="True"
								FrameworkElement.Style="{DynamicResource ListBoxStrippedStyle}"
								VirtualizingPanel.IsVirtualizing="True"
								VirtualizingPanel.VirtualizationMode="Recycling"
								ItemsControl.ItemsSource="{Binding GameProfilesService.CurrentKeyboardBindingCollection.ControllerBindings.FilteredMasks}">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<VirtualizingStackPanel
											Orientation="Vertical" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<Control.Template>
									<ControlTemplate
										TargetType="{x:Type ItemsControl}">
										<Border
											Padding="{TemplateBinding Control.Padding}"
											Border.Background="{TemplateBinding Control.Background}"
											Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
											Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
											SnapsToDevicePixels="True">
											<ScrollViewer
												Control.Padding="{TemplateBinding Control.Padding}"
												UIElement.Focusable="False">
												<ItemsPresenter
													SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
													ToolTip="{Binding ToolTipText}" />
											</ScrollViewer>
										</Border>
									</ControlTemplate>
								</Control.Template>
							</ListBox>
							<Grid
								Column="1"
								UIElement.Visibility="{Binding GameProfilesService.CurrentKeyboardBindingCollection.ControllerBindings.CurrentEditItem, Converter={converters:ValueIsNotNullToVisibilityConverter}}">
								<ScrollViewer
									Control.Background="{DynamicResource ContentBackground}">
									<bindingFrame:BindingFrameUC
										FrameworkElement.HorizontalAlignment="Stretch"
										HookKeyboardEventsOnlyWhenFocused="True"
										IsFixedWidth="False"
										DefaultViewType="{x:Type bindingFrameViews:BFKeyboard}" />
								</ScrollViewer>
							</Grid>
							<Border
								Grid.Column="0"
								Border.BorderBrush="{DynamicResource ContentBorderBrush}"
								Border.BorderThickness="0,0,1,0" />
							<Border
								Grid.Column="1"
								Border.BorderBrush="{DynamicResource ContentBorderBrush}"
								Border.BorderThickness="0,0,1,0" />
						</Grid>
						<TextBlock
							Name="MappingHint"
							FrameworkElement.HorizontalAlignment="Center"
							FrameworkElement.VerticalAlignment="Center"
							TextBlock.FontSize="16"
							TextAlignment="Center"
							UIElement.IsEnabled="{Binding GameProfilesService.CurrentGame.CurrentConfig.IsEditConfigMode}"
							UIElement.Visibility="{Binding GameProfilesService.CurrentKeyboardBindingCollection.ControllerBindings.Count, ConverterParameter='== 0', Converter={converters:ValueSatisfiesRuleParameterToVisibilityConverter}}">
							<FrameworkElement.Style>
								<Style
									BasedOn="{StaticResource DTTextBlockStyle}"
									TargetType="{x:Type TextBlock}">
									<Setter
										Property="TextBlock.Text"
										Value="{l:Translate {x:Static s:StringConsts.STR_CLICK_ADD_KEY_TO_REMAP}}" />
									<Style.Triggers>
										<MultiDataTrigger>
											<MultiDataTrigger.Conditions>
												<Condition
													Value="True"
													Binding="{Binding GamepadService.CurrentGamepad.CurrentController.IsRaiju}" />
												<Condition
													Value="True"
													Binding="{Binding GameProfilesService.CurrentGame.CurrentConfig.CurrentSubConfigData.IsGamepad}" />
											</MultiDataTrigger.Conditions>
											<Setter
												Property="TextBlock.Text"
												Value="{l:Translate {x:Static s:StringConsts.STR_CLICK_ADD_KEY_TO_REMAP_FOR_RAIJU}}" />
										</MultiDataTrigger>
									</Style.Triggers>
								</Style>
							</FrameworkElement.Style>
						</TextBlock>
						<Grid>
							<UIElement.Visibility>
								<MultiBinding
									Converter="{converters:MultiBooleanAndConverterToVisibilityConverter}">
									<Binding
										Path="GameProfilesService.CurrentKeyboardBindingCollection.ControllerBindings.Count"
										ConverterParameter="&gt; 0"
										Converter="{converters:ValueSatisfiesRuleParameter}" />
									<Binding
										Path="GameProfilesService.CurrentKeyboardBindingCollection.ControllerBindings.FilteredMasks.Count"
										ConverterParameter="== 0"
										Converter="{converters:ValueSatisfiesRuleParameter}" />
									<Binding
										Path="GameProfilesService.CurrentKeyboardBindingCollection.ControllerBindings.FilteredMasks.Count"
										ConverterParameter="== 0"
										Converter="{converters:ValueSatisfiesRuleParameter}" />
								</MultiBinding>
							</UIElement.Visibility>
							<StackPanel
								FrameworkElement.HorizontalAlignment="Center"
								FrameworkElement.VerticalAlignment="Center"
								Orientation="Horizontal"
								UIElement.IsEnabled="{Binding GameProfilesService.CurrentGame.CurrentConfig.IsEditConfigMode}">
								<UIElement.Visibility>
									<MultiBinding
										Converter="{converters:MultiBooleanAndConverterToVisibilityConverter}">
										<Binding
											Path="GameProfilesService.CurrentKeyboardBindingCollection.ControllerBindings.ControllerButtonTag"
											ConverterParameter="&gt; 0"
											Converter="{converters:ValueSatisfiesRuleParameter}" />
									</MultiBinding>
								</UIElement.Visibility>
								<TextBlock
									Name="MappingDiv1Hint"
									TextBlock.FontSize="16"
									FrameworkElement.Style="{DynamicResource DTTextBlockStyle}"
									TextAlignment="Center"
									TextBlock.Text="{l:Translate {x:Static s:StringConsts.STR_NO_MAPPINGS_FOR}, StringFormatRule=div1}" />
								<ContentControl
									Name="MappingButtonHint"
									FrameworkElement.Margin="8,0,0,0"
									FrameworkElement.VerticalAlignment="Center"
									AutomationProperties.AutomationId="MappingButtonHint"
									Control.FontSize="16"
									FrameworkElement.Style="{DynamicResource BaseControlStyle}"
									ContentControl.Content="{Binding GameProfilesService.CurrentKeyboardBindingCollection.ControllerBindings.ControllerButtonTag}"
									Control.Foreground="{Binding GameProfilesService.CurrentKeyboardBindingCollection.CollectionBrush}" />
								<TextBlock
									Name="MappingDiv2Hint"
									TextBlock.FontSize="16"
									FrameworkElement.Style="{DynamicResource DTTextBlockStyle}"
									TextAlignment="Center"
									TextBlock.Text="{l:Translate {x:Static s:StringConsts.STR_NO_MAPPINGS_FOR}, StringFormatRule=div2}" />
							</StackPanel>
							<TextBlock
								Name="MappingAdditionalHint"
								FrameworkElement.HorizontalAlignment="Center"
								FrameworkElement.VerticalAlignment="Center"
								TextBlock.FontSize="16"
								FrameworkElement.Style="{DynamicResource DTTextBlockStyleWithOpacity}"
								TextAlignment="Center"
								utils:NavigationServiceHTML.Text="{l:Translate {x:Static s:StringConsts.STR_ADD_KEY_FOR_MOUSE_BUTTON}}"
								UIElement.IsEnabled="{Binding GameProfilesService.CurrentGame.CurrentConfig.IsEditConfigMode}">
								<UIElement.Visibility>
									<MultiBinding
										Converter="{converters:MultiBooleanAndConverterToVisibilityConverter}">
										<Binding
											Path="GameProfilesService.CurrentKeyboardBindingCollection.ControllerBindings.ControllerButtonTag"
											ConverterParameter="== 0"
											Converter="{converters:ValueSatisfiesRuleParameter}" />
									</MultiBinding>
								</UIElement.Visibility>
							</TextBlock>
						</Grid>
					</Grid>
				</Border>
			</Grid>
			<StackPanel
				Grid.Column="1"
				FrameworkElement.HorizontalAlignment="Center"
				FrameworkElement.VerticalAlignment="Center"
				Orientation="Vertical">
				<buttons:SVGButton
					Name="btnToggleShowKeyboard"
					Drawing="{DynamicResource SwitchToKeyboard}"
					HighlightedForeground="{DynamicResource ConfigItemHoverForeground}"
					IsTriggered="True"
					FrameworkElement.Style="{DynamicResource ButtonFlip}"
					ButtonBase.Command="{Binding ShowKeyboardCommand}"
					ToolTip="{l:Translate {x:Static s:StringConsts.STR_TT_KEYBOARD}}"
					TriggeredForeground="{Binding GameProfilesService.CurrentKeyboardBindingCollection.CollectionBrush, FallbackValue='{StaticResource CreamBrush}'}"
					TriggeredHighlightedForeground="{Binding GameProfilesService.CurrentKeyboardBindingCollection.CollectionBrush, FallbackValue='{StaticResource CreamBrush}'}"
					UIElement.Visibility="{Binding GameProfilesService.CurrentKeyboardBindingCollection.SubConfigData.IsKeyboard, Converter={converters:BooleanToVisibilityConverter}}" />
				<buttons:SVGButton
					Name="btnToggleShowMouse"
					HighlightedForeground="{DynamicResource ConfigItemHoverForeground}"
					SVGHeight="36"
					SVGWidth="36"
					FrameworkElement.Style="{DynamicResource ButtonFlip}"
					ButtonBase.Command="{Binding ShowMouseCommand}"
					Drawing="{Binding GamepadService.CurrentMouseFlipSVGUri}"
					ToolTip="{l:Translate {x:Static s:StringConsts.STR_TT_BASIC_MOUSE_BUTTONS}}" />
				<buttons:SVGButton
					Name="btnToggleShowGamepadFace"
					ButtonBase.CommandParameter="{StaticResource BooleanFalseValue}"
					HighlightedForeground="{DynamicResource ConfigItemHoverForeground}"
					FrameworkElement.Style="{DynamicResource ButtonFlip}"
					ButtonBase.Command="{Binding ShowGamepadCommand}"
					Drawing="{Binding GamepadService.CurrentGamepadFlipToFaceButtonSVGUri}"
					ToolTip="{l:Translate {x:Static s:StringConsts.STR_TT_GAMEPAD_FRONT_BUTTONS}}"
					TriggeredForeground="{Binding GameProfilesService.CurrentKeyboardBindingCollection.CollectionBrush, FallbackValue='{StaticResource CreamBrush}'}"
					TriggeredHighlightedForeground="{Binding GameProfilesService.CurrentKeyboardBindingCollection.CollectionBrush, FallbackValue='{StaticResource CreamBrush}'}"
					UIElement.Visibility="{Binding GameProfilesService.CurrentKeyboardBindingCollection.SubConfigData.IsGamepad, Converter={converters:BooleanToVisibilityConverter}}" />
				<buttons:SVGButton
					Name="btnToggleShowGamepadBack"
					ButtonBase.CommandParameter="{StaticResource BooleanTrueValue}"
					HighlightedForeground="{DynamicResource ConfigItemHoverForeground}"
					FrameworkElement.Style="{DynamicResource ButtonFlip}"
					ButtonBase.Command="{Binding ShowGamepadCommand}"
					Drawing="{Binding GamepadService.CurrentGamepadFlipToBackButtonSVGUri}"
					ToolTip="{l:Translate {x:Static s:StringConsts.STR_TT_GAMEPAD_BACK_BUTTONS}}"
					TriggeredForeground="{Binding GameProfilesService.CurrentKeyboardBindingCollection.CollectionBrush, FallbackValue='{StaticResource CreamBrush}'}"
					TriggeredHighlightedForeground="{Binding GameProfilesService.CurrentKeyboardBindingCollection.CollectionBrush, FallbackValue='{StaticResource CreamBrush}'}"
					UIElement.Visibility="{Binding GameProfilesService.CurrentKeyboardBindingCollection.SubConfigData.IsGamepad, Converter={converters:BooleanToVisibilityConverter}}" />
				<buttons:SVGButton
					Name="btnToggleShowGamepadKeyboard"
					Drawing="{DynamicResource SwitchToKeypad}"
					HighlightedForeground="{DynamicResource ConfigItemHoverForeground}"
					IsTriggered="True"
					FrameworkElement.Style="{DynamicResource ButtonFlip}"
					ButtonBase.Command="{Binding ShowGamepadKeypadCommand}"
					ToolTip="{l:Translate {x:Static s:StringConsts.STR_TT_ADDITIONAL_GAMEPAD_BUTTONS}}"
					TriggeredForeground="{Binding GameProfilesService.CurrentKeyboardBindingCollection.CollectionBrush, FallbackValue='{StaticResource CreamBrush}'}"
					TriggeredHighlightedForeground="{Binding GameProfilesService.CurrentKeyboardBindingCollection.CollectionBrush, FallbackValue='{StaticResource CreamBrush}'}"
					UIElement.Visibility="{Binding GameProfilesService.CurrentKeyboardBindingCollection.SubConfigData.IsGamepad, Converter={converters:BooleanToVisibilityConverter}}" />
				<buttons:SVGButton
					Name="btnToggleShowMouseKeyboard"
					Drawing="{DynamicResource SwitchToKeypad}"
					HighlightedForeground="{DynamicResource ConfigItemHoverForeground}"
					IsTriggered="True"
					FrameworkElement.Style="{DynamicResource ButtonFlip}"
					ButtonBase.Command="{Binding ShowKeypadCommand}"
					ToolTip="{l:Translate {x:Static s:StringConsts.STR_TT_ADDITIONAL_MOUSE_BUTTONS}}"
					TriggeredForeground="{Binding GameProfilesService.CurrentKeyboardBindingCollection.CollectionBrush, FallbackValue='{StaticResource CreamBrush}'}"
					TriggeredHighlightedForeground="{Binding GameProfilesService.CurrentKeyboardBindingCollection.CollectionBrush, FallbackValue='{StaticResource CreamBrush}'}"
					UIElement.Visibility="{Binding GameProfilesService.CurrentKeyboardBindingCollection.SubConfigData.IsMouse, Converter={converters:BooleanToVisibilityConverter}}" />
				<buttons:SVGButton
					Name="btnToggleShowVirtualKeyboard"
					Drawing="{DynamicResource SwitchToVirtualKeyboard}"
					HighlightedForeground="{DynamicResource ConfigItemHoverForeground}"
					FrameworkElement.Style="{DynamicResource ButtonFlip}"
					ButtonBase.Command="{Binding ShowMouseSettingsCommand}"
					ToolTip="{l:Translate {x:Static s:StringConsts.STR_TT_VIRTUAL_DEVICES}}" />
				<buttons:SVGButton
					Name="btnToggleShowVibrationSettings"
					Drawing="{DynamicResource SwitchToVibration}"
					HighlightedForeground="{DynamicResource ConfigItemHoverForeground}"
					FrameworkElement.Style="{DynamicResource ButtonFlip}"
					TriggeredForeground="{DynamicResource CreamBrush}"
					TriggeredHighlightedForeground="{DynamicResource CreamBrush}"
					ButtonBase.Command="{Binding ShowVibrationSettingsCommand}"
					ToolTip="{l:Translate {x:Static s:StringConsts.STR_TT_VIBRATION_SETTINGS}}">
					<UIElement.Visibility>
						<MultiBinding
							Converter="{converters:MultiBooleanAndConverterToVisibilityConverter}">
							<Binding
								Path="GameProfilesService.CurrentKeyboardBindingCollection.SubConfigData.IsGamepad" />
							<Binding
								Path="GamepadService.CurrentGamepad.CurrentController.IsNoRumble"
								FallbackValue="True"
								Converter="{converters:InverseBooleanConverter}" />
						</MultiBinding>
					</UIElement.Visibility>
				</buttons:SVGButton>
			</StackPanel>
		</Grid>
		<Grid
			UIElement.Visibility="{Binding IsHitTestVisible, ConverterParameter=Invert, Converter={converters:BooleanToVisibilityConverter}, RelativeSource={RelativeSource Self}}">
			<Grid.RowDefinitions>
				<RowDefinition
					RowDefinition.Height="*" />
				<RowDefinition
					RowDefinition.Height="3*" />
				<RowDefinition
					RowDefinition.Height="*" />
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition
					ColumnDefinition.Width="*" />
				<ColumnDefinition
					ColumnDefinition.Width="3*" />
				<ColumnDefinition
					ColumnDefinition.Width="*" />
			</Grid.ColumnDefinitions>
			<recolorableImages:RecolorableSVG
				Grid.Row="1"
				Grid.Column="1"
				FrameworkElement.HorizontalAlignment="Stretch"
				FrameworkElement.VerticalAlignment="Stretch"
				Control.HorizontalContentAlignment="Center"
				Control.VerticalContentAlignment="Center"
				Drawing="{DynamicResource GamepadKeyboard}"
				Stretch="Uniform" />
		</Grid>
	</Grid>
</controls:BaseServicesDataContextControl>
