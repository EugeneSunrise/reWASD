<UserControl
	x:Class="reWASDUI.Views.Preferences.PreferencesOverlayNotifications" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:attachedBehaviours="clr-namespace:DiscSoft.NET.Common.Utils.AttachedBehaviours;assembly=DiscSoft.NET.Common" xmlns:checkBoxes="clr-namespace:DiscSoft.NET.Common.View.Controls.CheckBoxes;assembly=DiscSoft.NET.Common" xmlns:comboBoxes="clr-namespace:DiscSoft.NET.Common.View.Controls.ComboBoxes;assembly=DiscSoft.NET.Common" xmlns:converters="clr-namespace:DiscSoft.NET.Common.Utils.Converters;assembly=DiscSoft.NET.Common" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:l="clr-namespace:DiscSoft.NET.Common.Localization;assembly=DiscSoft.NET.Common" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:multiRangeSlider="clr-namespace:DiscSoft.NET.Common.View.Controls.MultiRangeSlider;assembly=DiscSoft.NET.Common" xmlns:s="clr-namespace:DTEngine;assembly=DiscSoft.NET.Common" xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
	x:Name="ucPreferencesOverlayNotifications" xmlns:preferences="clr-namespace:reWASDUI.Views.Preferences">
	<StackPanel>
		<checkBoxes:FillCheckBox
			FrameworkElement.Name="ShowOverlayMessages"
			FrameworkElement.Margin="0,18,0,0"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			ContentControl.Content="{l:Translate {x:Static s:StringConsts.STR_SHOW_OVERLAY_MESSAGES}}"
			IsChecked="{Binding ShowMessagesControll}"
			UIElement.IsEnabled="{Binding ParentVM.ShowOverlay}"
			x:Name="ShowOverlayMessages" />
		<checkBoxes:FillCheckBox
			FrameworkElement.Name="ShowBatteryIsLow"
			FrameworkElement.Margin="17,8,0,0"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			ContentControl.Content="{l:Translate {x:Static s:StringConsts.STR_OVERLAY_SHOW_BATTERY_IS_LOW}}"
			IsChecked="{Binding ShowBatteryIsLow}"
			UIElement.IsEnabled="{Binding ShowMessagesAndOverlay}"
			x:Name="ShowBatteryIsLow" />
		<checkBoxes:FillCheckBox
			FrameworkElement.Name="ShowBatteryIsCritical"
			FrameworkElement.Margin="17,8,0,0"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			ContentControl.Content="{l:Translate {x:Static s:StringConsts.STR_OVERLAY_SHOW_BATTERY_IS_CRITICAL}}"
			IsChecked="{Binding ShowBatteryIsCritical}"
			UIElement.IsEnabled="{Binding ShowMessagesAndOverlay}"
			ToolTip="{l:Translate {x:Static s:StringConsts.STR_OVERLAY_SHOW_BATTERY_IS_CRITICAL_HINT}}"
			x:Name="ShowBatteryIsCritical" />
		<checkBoxes:FillCheckBox
			FrameworkElement.Name="ShowRemapIsONOFF"
			FrameworkElement.Margin="17,8,0,0"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			ContentControl.Content="{l:Translate {x:Static s:StringConsts.STR_OVERLAY_SHOW_REMAP_IS_ONOFF}}"
			IsChecked="{Binding ShowRemapIsONOFF}"
			UIElement.IsEnabled="{Binding ShowMessagesAndOverlay}"
			x:Name="ShowRemapIsONOFF" />
		<checkBoxes:FillCheckBox
			FrameworkElement.Name="ShowSlotIsChanged"
			FrameworkElement.Margin="17,8,0,0"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			ContentControl.Content="{l:Translate {x:Static s:StringConsts.STR_OVERLAY_SHOW_SLOT_IS_CHANGED}}"
			IsChecked="{Binding ShowSlotIsChanged}"
			UIElement.IsEnabled="{Binding ShowMessagesAndOverlay}"
			x:Name="ShowSlotIsChanged" />
		<checkBoxes:FillCheckBox
			FrameworkElement.Name="ShowShiftIsChanged"
			FrameworkElement.Margin="17,8,0,0"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			ContentControl.Content="{l:Translate {x:Static s:StringConsts.STR_OVERLAY_SHOW_SHIFT_IS_CHANGED}}"
			IsChecked="{Binding ShowShiftIsChanged}"
			UIElement.IsEnabled="{Binding ShowMessagesAndOverlay}"
			x:Name="ShowShiftIsChanged" />
		<checkBoxes:FillCheckBox
			FrameworkElement.Name="ShowShiftIsChangedToggle"
			FrameworkElement.Margin="17,8,0,0"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			ContentControl.Content="{l:Translate {x:Static s:StringConsts.STR_OVERLAY_SHOW_SHIFT_IS_CHANGED_TOGGLE}}"
			IsChecked="{Binding ShowShiftIsChangedToggle}"
			UIElement.IsEnabled="{Binding ShowMessagesAndOverlay}"
			x:Name="ShowShiftIsChangedToggle" />
		<checkBoxes:FillCheckBox
			FrameworkElement.Name="ShowDisconnected"
			FrameworkElement.Margin="17,8,0,0"
			FrameworkElement.HorizontalAlignment="Left"
			FrameworkElement.VerticalAlignment="Top"
			ContentControl.Content="{l:Translate {x:Static s:StringConsts.STR_OVERLAY_DEVICE_DISCONNECTED}}"
			IsChecked="{Binding ShowDisconnected}"
			UIElement.IsEnabled="{Binding ShowMessagesAndOverlay}"
			x:Name="ShowDisconnected" />
		<Expander
			FrameworkElement.Name="OverlayPosition"
			FrameworkElement.Margin="17,14,0,0"
			HeaderedContentControl.Header="{l:Translate {x:Static s:StringConsts.STR_OVERLAY_POSITION}}"
			UIElement.IsEnabled="{Binding ShowMessagesAndOverlay}"
			IsExpanded="{Binding ExpandPosition}"
			x:Name="OverlayPosition">
			<StackPanel
				FrameworkElement.Margin="17,0,0,0">
				<comboBoxes:ColoredComboBox
					FrameworkElement.Name="MonitorsCB"
					FrameworkElement.Width="220"
					FrameworkElement.Margin="0,8,0,0"
					FrameworkElement.HorizontalAlignment="Left"
					ItemsControl.ItemsSource="{Binding ParentVM.Monitors}"
					SelectedItem="{Binding SelectedMonitor}"
					UIElement.Visibility="{Binding ParentVM.IsManyMonitors, Converter={converters:BooleanToVisibilityConverter}}"
					x:Name="MonitorsCB" />
				<Grid
					FrameworkElement.HorizontalAlignment="Left">
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							ColumnDefinition.Width="Auto" />
						<ColumnDefinition
							ColumnDefinition.Width="Auto" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition
							RowDefinition.Height="Auto" />
						<RowDefinition
							RowDefinition.Height="Auto" />
					</Grid.RowDefinitions>
					<RadioButton
						FrameworkElement.Name="AlignNotificationTopLeft"
						FrameworkElement.Margin="0,0,8,0"
						ContentControl.Content="{l:Translate {x:Static s:StringConsts.STR_OVERLAY_STR_OVERLAY_UPPER_LEFT}}"
						IsChecked="{Binding AlignNotificationTopLeft}"
						x:Name="AlignNotificationTopLeft" />
					<RadioButton
						FrameworkElement.Name="AlignNotificationTopRight"
						Grid.Column="1"
						ContentControl.Content="{l:Translate {x:Static s:StringConsts.STR_OVERLAY_STR_OVERLAY_UPPER_RIGHT}}"
						IsChecked="{Binding AlignNotificationTopRight}"
						x:Name="AlignNotificationTopRight" />
					<RadioButton
						FrameworkElement.Name="AlignNotificationBottomLeft"
						Grid.Row="1"
						FrameworkElement.Margin="0,0,8,0"
						ContentControl.Content="{l:Translate {x:Static s:StringConsts.STR_OVERLAY_STR_OVERLAY_BOTTOM_LEFT}}"
						IsChecked="{Binding AlignNotificationBottomLeft}"
						x:Name="AlignNotificationBottomLeft" />
					<RadioButton
						FrameworkElement.Name="AlignNotificationBottomRight"
						Grid.Row="1"
						Grid.Column="1"
						ContentControl.Content="{l:Translate {x:Static s:StringConsts.STR_OVERLAY_STR_OVERLAY_BOTTOM_RIGHT}}"
						IsChecked="{Binding AlignNotificationBottomRight}"
						x:Name="AlignNotificationBottomRight" />
				</Grid>
			</StackPanel>
		</Expander>
		<Expander
			FrameworkElement.Name="OverlayAdjustment"
			FrameworkElement.Margin="17,8,0,0"
			HeaderedContentControl.Header="{l:Translate {x:Static s:StringConsts.STR_ADJUSTMENTS}}"
			UIElement.IsEnabled="{Binding ShowMessagesAndOverlay}"
			IsExpanded="{Binding ExpandAdjustment}"
			x:Name="OverlayAdjustment">
			<StackPanel
				FrameworkElement.Margin="17,0,0,0">
				<TextBlock
					FrameworkElement.Name="HideMessagesTB"
					FrameworkElement.Margin="0,10,0,0"
					FrameworkElement.Style="{DynamicResource DTTextBlockStyle}"
					UIElement.IsEnabled="{Binding ShowMessagesAndOverlay}"
					TextBlock.Text="{l:Translate {x:Static s:StringConsts.STR_OVERLAY_MESSAGES_TIME}}"
					x:Name="HideMessagesTB" />
				<multiRangeSlider:MultiRangeSlider
					FrameworkElement.Name="HideMessagesSlider"
					Control.Background="#00FFFFFF"
					Maximum="10"
					Minimum="1"
					ThumbWidth="5"
					UIElement.IsEnabled="{Binding ShowMessagesAndOverlay}"
					Units="{l:Translate {x:Static s:StringConsts.STR_TIME_UNITS_SEC}}"
					x:Name="HideMessagesSlider">
					<multiRangeSlider:MultiRangeSlider.Items>
						<multiRangeSlider:MultiRangeSliderItem
							IsThumbHitTestVisible="False"
							LeftValue="1"
							ThumbStyle="{StaticResource {x:Type Thumb}}"
							UIElement.IsEnabled="{Binding ShowMessagesAndOverlay}"
							RightBackground="{Binding VisibilityBrushMessages}"
							ThumbBackground="{Binding VisibilityBrushMessages}" />
						<multiRangeSlider:MultiRangeSliderItem
							IsShowValueInTooltip="True"
							ThumbStyle="{StaticResource {x:Type Thumb}}"
							Header="{l:Translate {x:Static s:StringConsts.STR_VALUE}}"
							UIElement.IsEnabled="{Binding ShowMessagesAndOverlay}"
							LeftValue="{Binding TimeMessages, Mode=TwoWay}"
							RightBackground="{Binding VisibilityBrushMessagesGrey}"
							RightValue="{Binding TimeMessages, Mode=TwoWay}"
							ThumbBackground="{Binding VisibilityBrushMessages}" />
						<multiRangeSlider:MultiRangeSliderItem
							IsThumbHitTestVisible="False"
							LeftValue="10"
							RightValue="10"
							ThumbStyle="{StaticResource {x:Type Thumb}}"
							RightBackground="{Binding VisibilityBrushMessagesGrey}"
							ThumbBackground="{Binding VisibilityBrushMessagesGrey}" />
					</multiRangeSlider:MultiRangeSlider.Items>
					<FrameworkElement.Resources>
						<ResourceDictionary>
							<Style
								x:Key="DoubleUpDownMultiRangeItem"
								BasedOn="{StaticResource {x:Type toolkit:DoubleUpDown}}"
								TargetType="{x:Type DoubleUpDown}">
								<Setter
									Property="FrameworkElement.MinWidth"
									Value="70" />
								<Setter
									Property="FrameworkElement.MaxWidth"
									Value="70" />
								<Setter xmlns:primitives="clr-namespace:Xceed.Wpf.Toolkit.Primitives;assembly=Xceed.Wpf.Toolkit.NET5"
									Property="primitives:UpDownBase_x0060_1.ClipValueToMinMax"
									Value="True" />
								<Setter
									Property="UpDownBase_x0060_1.DisplayDefaultValueOnEmptyText"
									Value="True" />
								<Setter xmlns:toolkit="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit.NET5"
									Property="toolkit:NumericUpDown_x0060_1.FormatString"
									Value="F0" />
								<Setter xmlns:toolkit="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit.NET5"
									Property="toolkit:CommonNumericUpDown_x0060_1.ParsingNumberStyle"
									Value="Integer" />
								<Setter xmlns:primitives="clr-namespace:Xceed.Wpf.Toolkit.Primitives;assembly=Xceed.Wpf.Toolkit.NET5"
									Property="primitives:InputBase.TextAlignment"
									Value="Right" />
								<Setter
									Property="NumericUpDown_x0060_1.Increment"
									Value="1" />
							</Style>
						</ResourceDictionary>
					</FrameworkElement.Resources>
				</multiRangeSlider:MultiRangeSlider>
				<checkBoxes:FillCheckBox
					FrameworkElement.Name="NotHideShiftCB"
					FrameworkElement.Margin="0,8,0,0"
					FrameworkElement.HorizontalAlignment="Left"
					FrameworkElement.VerticalAlignment="Top"
					attachedBehaviours:ToolTipHelper.DisabledToolTip="{l:Translate {x:Static s:StringConsts.STR_NEED_ENABLE_SHIFT_NOTIFICATIONS}}"
					ContentControl.Content="{l:Translate {x:Static s:StringConsts.STR_OVERLAY_NOT_HIDE_SHIFT}}"
					IsChecked="{Binding NotHideShift}"
					UIElement.IsEnabled="{Binding ShowNotHideShift}"
					x:Name="NotHideShiftCB" />
				<TextBlock
					FrameworkElement.Name="OpacityTB"
					FrameworkElement.Margin="0,10,0,0"
					FrameworkElement.Style="{DynamicResource DTTextBlockStyle}"
					UIElement.IsEnabled="{Binding ShowMessagesAndOverlay}"
					TextBlock.Text="{l:Translate {x:Static s:StringConsts.STR_OVERLAY_OPACITY}}"
					x:Name="OpacityTB" />
				<multiRangeSlider:MultiRangeSlider
					FrameworkElement.Name="OpacitySlider"
					Control.Background="#00FFFFFF"
					Maximum="100"
					Minimum="20"
					ThumbWidth="5"
					Units="%"
					UIElement.IsEnabled="{Binding ShowMessagesAndOverlay}"
					x:Name="OpacitySlider">
					<multiRangeSlider:MultiRangeSlider.Items>
						<multiRangeSlider:MultiRangeSliderItem
							IsThumbHitTestVisible="False"
							LeftValue="20"
							ThumbStyle="{StaticResource {x:Type Thumb}}"
							UIElement.IsEnabled="{Binding ShowMessagesAndOverlay}"
							RightBackground="{Binding VisibilityBrushMessages}"
							ThumbBackground="{Binding VisibilityBrushMessages}" />
						<multiRangeSlider:MultiRangeSliderItem
							IsShowValueInTooltip="True"
							ThumbStyle="{StaticResource {x:Type Thumb}}"
							Header="{l:Translate {x:Static s:StringConsts.STR_VALUE}}"
							UIElement.IsEnabled="{Binding ShowMessagesAndOverlay}"
							LeftValue="{Binding TransparentMessages, Mode=TwoWay}"
							RightBackground="{Binding VisibilityBrushMessagesGrey}"
							RightValue="{Binding TransparentMessages, Mode=TwoWay}"
							ThumbBackground="{Binding VisibilityBrushMessages}" />
						<multiRangeSlider:MultiRangeSliderItem
							IsThumbHitTestVisible="False"
							LeftValue="100"
							RightValue="100"
							ThumbStyle="{StaticResource {x:Type Thumb}}"
							RightBackground="{Binding VisibilityBrushMessagesGrey}"
							ThumbBackground="{Binding VisibilityBrushMessagesGrey}" />
					</multiRangeSlider:MultiRangeSlider.Items>
					<FrameworkElement.Resources>
						<ResourceDictionary>
							<Style
								x:Key="DoubleUpDownMultiRangeItem"
								BasedOn="{StaticResource {x:Type DoubleUpDown}}"
								TargetType="{x:Type DoubleUpDown}">
								<Setter
									Property="FrameworkElement.MinWidth"
									Value="70" />
								<Setter
									Property="FrameworkElement.MaxWidth"
									Value="70" />
								<Setter
									Property="UpDownBase_x0060_1.ClipValueToMinMax"
									Value="True" />
								<Setter
									Property="UpDownBase_x0060_1.DisplayDefaultValueOnEmptyText"
									Value="True" />
								<Setter
									Property="NumericUpDown_x0060_1.FormatString"
									Value="F0" />
								<Setter
									Property="CommonNumericUpDown_x0060_1.ParsingNumberStyle"
									Value="Integer" />
								<Setter
									Property="InputBase.TextAlignment"
									Value="Right" />
								<Setter
									Property="NumericUpDown_x0060_1.Increment"
									Value="10" />
							</Style>
						</ResourceDictionary>
					</FrameworkElement.Resources>
				</multiRangeSlider:MultiRangeSlider>
				<TextBlock
					FrameworkElement.Margin="0,10,0,0"
					FrameworkElement.Style="{DynamicResource DTTextBlockStyle}"
					UIElement.IsEnabled="{Binding ShowMessagesAndOverlay}"
					TextBlock.Text="{l:Translate {x:Static s:StringConsts.STR_CONFIG_OVERLAY_SIZE}}" />
				<multiRangeSlider:MultiRangeSlider
					Control.Background="#00FFFFFF"
					Maximum="2"
					Minimum="0.5"
					ThumbWidth="5"
					TickFrequency="0.1"
					Units=""
					UIElement.IsEnabled="{Binding ShowMessagesAndOverlay}">
					<multiRangeSlider:MultiRangeSlider.Items>
						<multiRangeSlider:MultiRangeSliderItem
							IsThumbHitTestVisible="False"
							LeftValue="0.5"
							ThumbStyle="{StaticResource {x:Type Thumb}}"
							UIElement.IsEnabled="{Binding ShowMessagesAndOverlay}"
							RightBackground="{Binding VisibilityBrushMessages}"
							ThumbBackground="{Binding VisibilityBrushMessages}" />
						<multiRangeSlider:MultiRangeSliderItem
							IsShowValueInTooltip="True"
							ThumbStyle="{StaticResource {x:Type Thumb}}"
							Header="{l:Translate {x:Static s:StringConsts.STR_VALUE}}"
							UIElement.IsEnabled="{Binding ShowMessagesAndOverlay}"
							LeftValue="{Binding Scale, Mode=TwoWay}"
							RightBackground="{Binding VisibilityBrushMessagesGrey}"
							RightValue="{Binding Scale, Mode=TwoWay}"
							ThumbBackground="{Binding VisibilityBrushMessages}" />
						<multiRangeSlider:MultiRangeSliderItem
							IsThumbHitTestVisible="False"
							LeftValue="2"
							RightValue="2"
							ThumbStyle="{StaticResource {x:Type Thumb}}"
							RightBackground="{Binding VisibilityBrushMessagesGrey}"
							ThumbBackground="{Binding VisibilityBrushMessagesGrey}" />
					</multiRangeSlider:MultiRangeSlider.Items>
					<FrameworkElement.Resources>
						<ResourceDictionary>
							<Style
								x:Key="DoubleUpDownMultiRangeItem"
								BasedOn="{StaticResource {x:Type DoubleUpDown}}"
								TargetType="{x:Type DoubleUpDown}">
								<Setter
									Property="FrameworkElement.MinWidth"
									Value="70" />
								<Setter
									Property="FrameworkElement.MaxWidth"
									Value="70" />
								<Setter
									Property="UpDownBase_x0060_1.ClipValueToMinMax"
									Value="True" />
								<Setter
									Property="UpDownBase_x0060_1.DisplayDefaultValueOnEmptyText"
									Value="True" />
								<Setter
									Property="NumericUpDown_x0060_1.FormatString"
									Value="F1" />
								<Setter
									Property="InputBase.TextAlignment"
									Value="Right" />
								<Setter
									Property="NumericUpDown_x0060_1.Increment"
									Value="0.1" />
							</Style>
						</ResourceDictionary>
					</FrameworkElement.Resources>
				</multiRangeSlider:MultiRangeSlider>
				<checkBoxes:FillCheckBox
					FrameworkElement.Name="ShowShortMessagesCB"
					FrameworkElement.Margin="0,8,0,0"
					FrameworkElement.HorizontalAlignment="Left"
					FrameworkElement.VerticalAlignment="Top"
					ContentControl.Content="{l:Translate {x:Static s:StringConsts.STR_MINIMIZED_NOTIFICATIONS}}"
					IsChecked="{Binding ShowShortMessages}"
					UIElement.IsEnabled="{Binding ShowMessagesAndOverlay}"
					x:Name="ShowShortMessagesCB" />
			</StackPanel>
		</Expander>
	</StackPanel>
</UserControl>
