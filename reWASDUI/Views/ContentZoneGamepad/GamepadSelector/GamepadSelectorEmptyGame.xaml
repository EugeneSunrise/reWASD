<UserControl
	x:Class="reWASDUI.Views.ContentZoneGamepad.GamepadSelector.GamepadSelectorEmptyGame" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:buttons="clr-namespace:DiscSoft.NET.Common.View.Controls.Buttons;assembly=DiscSoft.NET.Common" xmlns:controls="clr-namespace:DiscSoft.NET.Common.View.Controls;assembly=DiscSoft.NET.Common" xmlns:converters="clr-namespace:DiscSoft.NET.Common.Utils.Converters;assembly=DiscSoft.NET.Common" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:enums="clr-namespace:reWASDCommon.Infrastructure.Enums;assembly=reWASDCommon" xmlns:gamepadSelector="clr-namespace:reWASDUI.Views.ContentZoneGamepad.GamepadSelector" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:licenseFeatureManaging="clr-namespace:reWASDUI.Controls.LicenseFeatureManaging" xmlns:localization="clr-namespace:DiscSoft.NET.Common.Localization;assembly=DiscSoft.NET.Common" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:reWasdui="clr-namespace:reWASDUI" xmlns:recolorableimages="clr-namespace:DiscSoft.NET.Common.View.RecolorableImages;assembly=DiscSoft.NET.Common" xmlns:s="clr-namespace:DTEngine;assembly=DiscSoft.NET.Common" xmlns:utils="clr-namespace:DiscSoft.NET.Common.Utils;assembly=DiscSoft.NET.Common" xmlns:viewModels="clr-namespace:reWASDUI.ViewModels" xmlns:b="http://schemas.microsoft.com/xaml/behaviors">
	<FrameworkElement.Resources>
		<ResourceDictionary>
			<Style
				x:Key="HeaderTBStyle"
				TargetType="{x:Type TextBlock}">
				<Setter
					Property="FrameworkElement.VerticalAlignment"
					Value="Bottom" />
				<Setter
					Property="FrameworkElement.HorizontalAlignment"
					Value="Center" />
				<Setter
					Property="TextBlock.TextWrapping"
					Value="Wrap" />
				<Setter
					Property="TextBlock.Foreground"
					Value="#FFFFFFFF" />
				<Setter
					Property="TextBlock.FontSize"
					Value="20" />
				<Setter
					Property="TextBlock.FontWeight"
					Value="SemiBold" />
				<Setter
					Property="FrameworkElement.Margin"
					Value="30,0" />
				<Setter
					Property="TextBlock.TextAlignment"
					Value="Center" />
				<Style.Triggers>
					<Trigger
						Property="UIElement.IsEnabled"
						Value="False">
						<Setter
							Property="UIElement.Opacity"
							Value="0.6" />
					</Trigger>
				</Style.Triggers>
			</Style>
		</ResourceDictionary>
	</FrameworkElement.Resources>
	<Grid>
		<Image
			Name="img"
			Image.Source="{DynamicResource StartScreenBackground}"
			Image.Stretch="UniformToFill" />
		<Grid
			UIElement.Visibility="{Binding GamepadService.CurrentGamepad.IsInitializedController, Converter={converters:BooleanToVisibilityConverter}}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition
					ColumnDefinition.Width="0.3*"
					ColumnDefinition.MinWidth="315" />
				<ColumnDefinition
					ColumnDefinition.Width="0.7*" />
			</Grid.ColumnDefinitions>
			<gamepadSelector:GamepadList
				x:Name="GamepadList"
				Grid.Column="1"
				FrameworkElement.Margin="25,0,25,5"
				FrameworkElement.HorizontalAlignment="Left"
				FrameworkElement.VerticalAlignment="Bottom"
				IsBigIcons="True" />
			<Grid
				Column="1"
				FrameworkElement.MaxWidth="1200"
				FrameworkElement.MaxHeight="1200">
				<Grid.RowDefinitions>
					<RowDefinition
						RowDefinition.Height="0.9*" />
					<RowDefinition
						RowDefinition.Height="2*" />
					<RowDefinition
						RowDefinition.Height="1.8*" />
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition
						ColumnDefinition.Width="*" />
					<ColumnDefinition
						ColumnDefinition.Width="3*" />
					<ColumnDefinition
						ColumnDefinition.Width="*" />
				</Grid.ColumnDefinitions>
				<Grid
					ColumnSpan="3"
					ContextMenu="{StaticResource ctxMenuGamepad}"
					DataContext="{Binding GamepadService.CurrentGamepad}"
					UIElement.Visibility="{Binding Converter={converters:ValueIsNotNullToVisibilityConverter}}">
					<Border
						Name="BorderControllerName"
						UIElement.Visibility="{Binding IsAnyOfForbidden, FallbackValue=Collapsed, Converter={converters:InvertedBooleanToVisibilityConverter}}">
						<TextBlock
							Name="tblockControllerName"
							FrameworkElement.Style="{StaticResource HeaderTBStyle}"
							utils:NavigationServiceHTML.Text="{Binding ControllerDisplayName}"
							UIElement.IsEnabled="{Binding IsOnline}"
							UIElement.Visibility="{Binding GamepadSelectorVM.IsFriendlyNameEditVisible, ConverterParameter=invert, Converter={converters:BooleanToVisibilityConverter}}" />
					</Border>
					<TextBlock
						Name="tblockControllerNameUnsupported"
						FrameworkElement.Style="{StaticResource HeaderTBStyle}"
						utils:NavigationServiceHTML.Text="{localization:Translate {x:Static s:StringConsts.STR_DEVICE_NOT_SUPPORTED_SHORT}}"
						UIElement.Visibility="{Binding IsAnyOfForbidden, FallbackValue=Collapsed, Converter={converters:BooleanToVisibilityConverter}}" />
					<Border
						FrameworkElement.Margin="30,0"
						FrameworkElement.HorizontalAlignment="Center"
						FrameworkElement.VerticalAlignment="Bottom"
						Border.Background="{DynamicResource WindowBackground}"
						Border.BorderBrush="{DynamicResource MainWindowBorderBrush}"
						Border.BorderThickness="1"
						UIElement.Visibility="{Binding GamepadSelectorVM.IsFriendlyNameEditVisible, Converter={converters:BooleanToVisibilityConverter}}">
						<controls:WaterMarkTextBox
							Name="tbControllerName"
							FrameworkElement.Margin="10,2"
							Control.BorderThickness="0"
							Control.FontSize="20"
							Control.FontWeight="SemiBold"
							Control.Foreground="#FFFFFFFF"
							MaxLength="17"
							SelectionBrush="{DynamicResource CreamBrush}"
							TextBox.Text="{Binding ControllerFriendlyName, UpdateSourceTrigger=LostFocus}"
							KeyDown="TbControllerName_OnKeyDown"
							LostFocus="tbControllerNameLostFocus" />
					</Border>
				</Grid>
				<TextBlock
					Grid.ColumnSpan="3"
					FrameworkElement.Margin="15,0,30,0"
					FrameworkElement.HorizontalAlignment="Center"
					FrameworkElement.VerticalAlignment="Bottom"
					TextBlock.FontSize="20"
					FrameworkElement.Style="{DynamicResource DTTextBlockStyle}"
					utils:NavigationServiceHTML.Command="{Binding ShowBlacklistPreferencesCommand}"
					utils:NavigationServiceHTML.Text="{localization:Translate {x:Static s:StringConsts.STR_NO_DEVICES_DESCRIPTION}}"
					UIElement.Visibility="{Binding GamepadService.IsAnyGamepadConnected, ConverterParameter=invert, Converter={converters:BooleanToVisibilityConverter}}" />
				<recolorableimages:RecolorableSVG
					Name="svgEmpty"
					Grid.Row="1"
					Grid.Column="1"
					FrameworkElement.Margin="100,100,100,0"
					FrameworkElement.HorizontalAlignment="Stretch"
					FrameworkElement.VerticalAlignment="Stretch"
					Control.HorizontalContentAlignment="Center"
					Control.VerticalContentAlignment="Center"
					Drawing="{DynamicResource Disconnected}"
					Stretch="Uniform"
					UIElement.Visibility="{Binding GamepadService.IsAnyGamepadConnected, ConverterParameter=invert, Converter={converters:BooleanToVisibilityConverter}}" />
				<recolorableimages:RecolorableSVG
					Name="svgContainer"
					Grid.Row="1"
					Grid.Column="1"
					FrameworkElement.Margin="0,20"
					FrameworkElement.HorizontalAlignment="Stretch"
					FrameworkElement.VerticalAlignment="Stretch"
					Control.HorizontalContentAlignment="Center"
					Control.VerticalContentAlignment="Center"
					Stretch="Uniform"
					UIElement.Visibility="{Binding GamepadService.CurrentGamepad, Converter={converters:ValueIsNotNullToVisibilityConverter}}"
					OnSVGRendered="SvgContainer_OnSVGRendered">
					<FrameworkElement.Style>
						<Style
							TargetType="{x:Type recolorableimages:RecolorableSVG}">
							<Setter
								Property="recolorableimages:RecolorableSVG.Drawing"
								Value="{Binding GamepadService.CurrentGamepadSVGUriForStartPage}" />
							<Style.Triggers>
								<DataTrigger
									Value="False"
									Binding="{Binding GamepadService.CurrentGamepad.IsOnline}">
									<Setter
										Property="UIElement.Opacity"
										Value="0.6" />
								</DataTrigger>
								<DataTrigger
									Value="True"
									Binding="{Binding GamepadService.CurrentGamepad.ControllerFamily, ConverterParameter='{x:Static enums:ControllerFamily.Mouse}', Converter={converters:ValuesAreEqual}}">
									<Setter
										Property="recolorableimages:RecolorableSVG.Drawing"
										Value="{DynamicResource GamepadMouse}" />
								</DataTrigger>
								<DataTrigger
									Value="True"
									Binding="{Binding GamepadService.CurrentGamepad.HasEngineMouseControllers}">
									<Setter
										Property="recolorableimages:RecolorableSVG.Drawing"
										Value="{DynamicResource EngineControllerMouse}" />
								</DataTrigger>
								<DataTrigger
									Value="True"
									Binding="{Binding GamepadService.CurrentGamepad.HasEngineMouseTouchpadControllers}">
									<Setter
										Property="recolorableimages:RecolorableSVG.Drawing"
										Value="{DynamicResource EngineControllerMouseTouchpad}" />
								</DataTrigger>
								<DataTrigger
									Value="True"
									Binding="{Binding GamepadService.CurrentGamepad.ControllerFamily, ConverterParameter='{x:Static enums:ControllerFamily.Keyboard}', Converter={converters:ValuesAreEqual}}">
									<Setter
										Property="recolorableimages:RecolorableSVG.Drawing"
										Value="{DynamicResource GamepadKeyboard}" />
								</DataTrigger>
								<DataTrigger
									Value="True"
									Binding="{Binding GamepadService.CurrentGamepad.IsCompositeDevice}">
									<Setter
										Property="recolorableimages:RecolorableSVG.Drawing"
										Value="{DynamicResource Gamepad3devices}" />
								</DataTrigger>
								<DataTrigger
									Value="True"
									Binding="{Binding GamepadService.CurrentGamepad.IsNintendoSwitchJoyConComposite}">
									<Setter
										Property="recolorableimages:RecolorableSVG.Drawing"
										Value="{DynamicResource GamepadNJCon}" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</FrameworkElement.Style>
				</recolorableimages:RecolorableSVG>
				<Border
					Grid.Row="1"
					Grid.Column="1"
					UIElement.Visibility="{Binding GamepadService.CurrentGamepad.IsOnline, Converter={converters:BooleanToVisibilityConverter}}">
					<gamepadSelector:GamepadBatteryLevel
						x:Name="GamepadBatterySVG"
						FrameworkElement.HorizontalAlignment="Center"
						FrameworkElement.VerticalAlignment="Top">
						<UIElement.Visibility>
							<MultiBinding
								ConverterParameter="invert hidden"
								Converter="{converters:MultiBooleanOrConverterToVisibilityConverter}">
								<Binding
									Path="GamepadService.CurrentGamepad"
									ConverterParameter="invert"
									Converter="{converters:ValueIsNotNull}" />
								<Binding
									Path="GamepadService.CurrentGamepad.IsCompositeDevice" />
								<Binding
									Path="GamepadService.CurrentGamepad.IsPeripheralDevice" />
								<Binding
									Path="GamepadService.CurrentGamepad.IsUnknownControllerType" />
							</MultiBinding>
						</UIElement.Visibility>
					</gamepadSelector:GamepadBatteryLevel>
				</Border>
				<UniformGrid
					Grid.Row="2"
					Grid.ColumnSpan="3"
					FrameworkElement.HorizontalAlignment="Center"
					FrameworkElement.VerticalAlignment="Top"
					Columns="1"
					UIElement.Visibility="{Binding GamepadService.CurrentGamepad.IsAnyOfForbidden, FallbackValue=Collapsed, Converter={converters:BooleanToVisibilityConverter}}">
					<buttons:ColoredButton
						Name="btnBlacklist"
						FrameworkElement.Margin="5,5"
						ButtonBase.Command="{Binding GamepadService.CurrentGamepad.DoNotShowInRewasdCommand}"
						ContentControl.Content="{localization:Translate {x:Static s:StringConsts.STR_DONT_SHOW_IN_REWASD}}"
						ToolTip="{localization:Translate {x:Static s:StringConsts.STR_DONT_SHOW_IN_REWASD_HINT}}" />
					<buttons:ColoredButton
						Name="btnSupport"
						FrameworkElement.Margin="5,5"
						ButtonBase.Command="{Binding RequestSupportCommand}"
						ContentControl.Content="{localization:Translate {x:Static s:StringConsts.STR_REQUEST_SUPPORT}}"
						ToolTip="{localization:Translate {x:Static s:StringConsts.STR_REQUEST_SUPPORT_HINT}}" />
				</UniformGrid>
				<UniformGrid
					Grid.Row="2"
					Grid.ColumnSpan="3"
					FrameworkElement.HorizontalAlignment="Center"
					FrameworkElement.VerticalAlignment="Top"
					Columns="2"
					UIElement.Visibility="{Binding GamepadService.CurrentGamepad.IsAnyOfForbidden, FallbackValue=Collapsed, Converter={converters:InvertedBooleanToVisibilityConverter}}">
					<buttons:ColoredButton
						Name="btnReinitialize"
						FrameworkElement.Margin="5,5"
						ButtonBase.Command="{Binding GamepadService.CurrentGamepad.ReinitializeCommand}"
						ContentControl.Content="{localization:Translate {x:Static s:StringConsts.STR_REINITIALIZE}}"
						ToolTip="{localization:Translate {x:Static s:StringConsts.STR_REINITIALIZE_HINT}}">
						<UIElement.Visibility>
							<MultiBinding
								Converter="{converters:MultiBooleanAndConverterToVisibilityConverter}">
								<Binding
									Path="IsEnabled"
									Mode="OneWay"
									RelativeSource="{RelativeSource Self}" />
								<Binding
									Path="GamepadService.CurrentGamepad.ControllerFamily"
									ConverterParameter="{x:Static enums:ControllerFamily.Gamepad}"
									Converter="{converters:ValuesAreNotEqual}" />
							</MultiBinding>
						</UIElement.Visibility>
					</buttons:ColoredButton>
					<buttons:ColoredButton
						Name="btnVibrate"
						FrameworkElement.Margin="5,5"
						ButtonBase.Command="{Binding VibrateCommand}"
						ContentControl.Content="{localization:Translate {x:Static s:StringConsts.STR_VIBRATE}}"
						ToolTip="{localization:Translate {x:Static s:StringConsts.STR_VIBRATE_HINT}}">
						<UIElement.Visibility>
							<MultiBinding
								Converter="{converters:MultiBooleanAndConverterToVisibilityConverter}">
								<MultiBinding.Bindings>
									<Binding
										Path="IsEnabled"
										RelativeSource="{RelativeSource Self}" />
									<Binding
										Path="GamepadService.CurrentGamepad.IsOnline" />
									<Binding
										Path="GamepadService.CurrentGamepad.HasOnlineGamepadVibrateControllers" />
								</MultiBinding.Bindings>
							</MultiBinding>
						</UIElement.Visibility>
					</buttons:ColoredButton>
					<buttons:ColoredButton
						Name="btnRemoveUntilReconect"
						FrameworkElement.Margin="5,5"
						ButtonBase.Command="{Binding GamepadService.CurrentGamepad.RemoveUnitlReconnectCommand}"
						ContentControl.Content="{localization:Translate {x:Static s:StringConsts.STR_REMOVE_UNTIL_RECONNECT}}"
						ToolTip="{localization:Translate {x:Static s:StringConsts.STR_REMOVE_UNTIL_RECONNECT}}">
						<UIElement.Visibility>
							<MultiBinding
								Converter="{converters:MultiBooleanAndConverterToVisibilityConverter}">
								<MultiBinding.Bindings>
									<Binding
										Path="GamepadService.CurrentGamepad.IsOnline"
										Converter="{converters:InverseBooleanConverter}" />
									<Binding
										Path="GamepadService.CurrentGamepad.IsCompositeDevice"
										Converter="{converters:InverseBooleanConverter}" />
								</MultiBinding.Bindings>
							</MultiBinding>
						</UIElement.Visibility>
					</buttons:ColoredButton>
					<buttons:ColoredButton
						Name="btnRemoveComposite"
						FrameworkElement.Margin="5,5"
						ButtonBase.Command="{Binding GamepadService.CurrentGamepad.RemoveCompositeCommand}"
						ContentControl.Content="{localization:Translate {x:Static s:StringConsts.STR_REMOVE}}"
						ToolTip="{localization:Translate {x:Static s:StringConsts.STR_REMOVE}}">
						<UIElement.Visibility>
							<MultiBinding
								Converter="{converters:MultiBooleanAndConverterToVisibilityConverter}">
								<MultiBinding.Bindings>
									<Binding
										Path="GamepadService.CurrentGamepad.IsOnline"
										Converter="{converters:InverseBooleanConverter}" />
									<Binding
										Path="GamepadService.CurrentGamepad.IsCompositeDevice" />
								</MultiBinding.Bindings>
							</MultiBinding>
						</UIElement.Visibility>
					</buttons:ColoredButton>
					<buttons:ColoredButton
						Name="btnCreateComposite"
						FrameworkElement.Margin="5,5"
						ButtonBase.Command="{Binding GamepadService.CurrentGamepad.ShowCompositeDevicesWindowCommand}"
						ContentControl.Content="{localization:Translate {x:Static s:StringConsts.STR_GROUP}}"
						ToolTip="{localization:Translate {x:Static s:StringConsts.STR_GROUP_HINT}}">
						<UIElement.Visibility>
							<MultiBinding
								Converter="{converters:MultiBooleanAndConverterToVisibilityConverter}">
								<Binding
									Path="IsEnabled"
									Mode="OneWay"
									RelativeSource="{RelativeSource Self}" />
								<Binding
									Path="GamepadService.CurrentGamepad.IsCompositeDevice"
									Converter="{converters:InverseBooleanConverter}" />
							</MultiBinding>
						</UIElement.Visibility>
					</buttons:ColoredButton>
					<buttons:ColoredButton
						Name="btnEditComposite"
						FrameworkElement.Margin="5,5"
						ButtonBase.Command="{Binding GamepadService.CurrentGamepad.ShowCompositeDevicesWindowCommand}"
						ContentControl.Content="{localization:Translate {x:Static s:StringConsts.STR_EDIT_GROUP}}"
						ToolTip="{localization:Translate {x:Static s:StringConsts.STR_EDIT_GROUP_HINT}}"
						UIElement.Visibility="{Binding GamepadService.CurrentGamepad.IsCompositeDevice, FallbackValue=Collapsed, Converter={converters:BooleanToVisibilityConverter}}" />
					<buttons:ColoredButton
						Name="btnShowLEDSettings"
						FrameworkElement.Margin="5,5"
						ButtonBase.Command="{Binding ShowLEDPreferencesCommand}"
						ContentControl.Content="{localization:Translate {x:Static s:StringConsts.STR_LED_SETTINGS}}"
						ToolTip="{localization:Translate {x:Static s:StringConsts.STR_ADJUST_LED_HINT}}"
						UIElement.Visibility="{Binding Path=IsEnabled, Mode=OneWay, RelativeSource={RelativeSource Self}, Converter={converters:BooleanToVisibilityConverter}}" />
					<licenseFeatureManaging:LicenseFeatureManagingContainer
						x:Name="btnSlotHotkeysLicenseContainer"
						AssociatedFeatureGUID="{x:Static reWasdui:App.FOUR_SLOTS_FEATURE_GUID}"
						IsFeatureUnlocked="{Binding LicensingService.IsSlotFeatureUnlocked}">
						<buttons:ColoredButton
							Name="btnSlotHotkeys"
							FrameworkElement.Margin="5,5"
							ButtonBase.Command="{Binding ShowSlotHotkeysPreferencesCommand}"
							ContentControl.Content="{localization:Translate {x:Static s:StringConsts.STR_SLOT_HOTKEYS}}"
							ToolTip="{localization:Translate {x:Static s:StringConsts.STR_ADJUST_SLOT_HOTKEYS_HINT}}" />
					</licenseFeatureManaging:LicenseFeatureManagingContainer>
					<buttons:ColoredButton
						Name="btnRename"
						FrameworkElement.Margin="5,5"
						ButtonBase.Command="{Binding EditControllerNameCommand}"
						ContentControl.Content="{localization:Translate {x:Static s:StringConsts.STR_5116}}"
						ToolTip="{localization:Translate {x:Static s:StringConsts.STR_RENAME_DEVICE_HINT}}">
						<UIElement.Visibility>
							<MultiBinding
								FallbackValue="Collapsed"
								Converter="{converters:MultiBooleanAndConverterToVisibilityConverter}">
								<Binding
									Path="GamepadService.CurrentGamepad.ControllerFamily"
									ConverterParameter="{x:Static enums:ControllerFamily.Gamepad}"
									Converter="{converters:ValuesAreNotEqual}" />
								<Binding
									Path="GamepadService.CurrentGamepad.IsNintendoSwitchJoyConComposite"
									Converter="{converters:InverseBooleanConverter}" />
							</MultiBinding>
						</UIElement.Visibility>
					</buttons:ColoredButton>
				</UniformGrid>
			</Grid>
			<Border
				FrameworkElement.Margin="0,30,0,0"
				Border.BorderBrush="#404040"
				Border.BorderThickness="0,1,1,0">
				<UIElement.Effect>
					<DropShadowEffect
						BlurRadius="10"
						Opacity="0.3"
						RenderingBias="Quality"
						ShadowDepth="2" />
				</UIElement.Effect>
			</Border>
			<Border
				FrameworkElement.Margin="0,30,0,0">
				<Grid>
					<Rectangle
						UIElement.ClipToBounds="True">
						<behaviors:Interaction.Behaviors xmlns:behaviors="clr-namespace:Microsoft.Xaml.Behaviors;assembly=Microsoft.Xaml.Behaviors">
							<controls:BlurBackgroundBehavior
								BlurContainer="{Binding ElementName=img}" />
						</behaviors:Interaction.Behaviors>
					</Rectangle>
					<Border
						Border.Background="#FFFFFFFF"
						Opacity="0.05" />
					<gamepadSelector:GamesSelectorStartScreen
						UIElement.Visibility="{Binding GameProfilesService.CurrentGame, FallbackValue=Collapsed, Converter={converters:ValueIsNullToVisibilityConverter}}" />
				</Grid>
			</Border>
		</Grid>
	</Grid>
</UserControl>
