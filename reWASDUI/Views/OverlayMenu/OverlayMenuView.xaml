<controls:BaseServicesDataContextControl
	x:Class="reWASDUI.Views.OverlayMenu.OverlayMenuView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:controls="clr-namespace:reWASDUI.Controls" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:DTOverlay="clr-namespace:DTOverlay;assembly=reWASDCommon" xmlns:infrastructure1="clr-namespace:reWASDUI.Infrastructure" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:multiRangeSlider="clr-namespace:DiscSoft.NET.Common.View.Controls.MultiRangeSlider;assembly=DiscSoft.NET.Common" xmlns:overlayMenu="clr-namespace:reWASDUI.Views.OverlayMenu" xmlns:overlayMenuNamespace="clr-namespace:XBEliteWPF.Views.OverlayMenu" xmlns:recolorableimages="clr-namespace:DiscSoft.NET.Common.View.RecolorableImages;assembly=DiscSoft.NET.Common" xmlns:Controls1="clr-namespace:RadialMenu.Controls;assembly=reWASDCommon" xmlns:converters="clr-namespace:RadialMenu.Converters" xmlns:converters2="clr-namespace:DiscSoft.NET.Common.Utils.Converters;assembly=DiscSoft.NET.Common" xmlns:converters21="clr-namespace:reWASDCommon.Utils.Converters;assembly=reWASDCommon" xmlns:bindingFrame="clr-namespace:reWASDUI.Controls.XBBindingControls.BindingFrame" xmlns:bindingFrameViews="clr-namespace:reWASDUI.Controls.XBBindingControls.BindingFrame.BindingFrameViews" xmlns:localization="clr-namespace:DiscSoft.NET.Common.Localization;assembly=DiscSoft.NET.Common" xmlns:s="clr-namespace:DTEngine;assembly=DiscSoft.NET.Common" xmlns:converters1="clr-namespace:reWASDUI.Utils.Converters">
	<FrameworkElement.Resources>
		<ResourceDictionary>
			<DataTemplate
				x:Key="{DataTemplateKey {x:Type overlayMenuNamespace:SectorItem}}"
				DataType="{x:Type overlayMenuNamespace:SectorItem}">
				<Controls1:RadialMenuItem
					Controls1:RadialMenuItem.IsUI="True"
					Control.Foreground="{StaticResource ContentBackground}"
					Controls1:RadialMenuItem.Index="{Binding NumberSector}"
					Controls1:RadialMenuItem.Count="{Binding owner.UISectorsCount}"
					Controls1:RadialMenuItem.RealCount="{Binding owner.SectorsCount}"
					Controls1:RadialMenuItem.IsHasSubMenu="{Binding IsSubmenuOn}"
					Controls1:RadialMenuItem.IsActive="{Binding IsActive}"
					Controls1:RadialMenuItem.AngleDelta="{Binding Current.SectorsAngleDelta, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Controls1:RadialMenu}}"
					Controls1:RadialMenuItem.HalfShifted="{Binding Current.HalfShiftedItems, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Controls1:RadialMenu}}"
					Controls1:RadialMenuItem.SectorBrush="{Binding SectorColor, Converter={converters2:ColorToSolidBrushConverter}}"
					Controls1:RadialMenuItem.RadialMenu="{Binding Current, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Controls1:RadialMenu}}"
					Controls1:RadialMenuItem.Drawing="{Binding SelectedIcon.Drawing}"
					Controls1:RadialMenuItem.XBBinding="{Binding XBBinding, IsAsync=True}"
					PreviewMouseDown="RadialMenuItem_PreviewMouseDown" />
			</DataTemplate>
			<DataTemplate
				x:Key="SubMenuDataDataTemplate"
				DataType="{x:Type overlayMenu:TViewTabs}">
				<StackPanel
					FrameworkElement.Name="grid"
					FrameworkElement.Height="20"
					FrameworkElement.Margin="12,0"
					Orientation="Horizontal">
					<recolorableimages:RecolorableSVG
						Name="ico"
						FrameworkElement.Margin="4,0,5,0"
						FrameworkElement.Style="{StaticResource recolorableSVGWithState}"
						Drawing="{Binding Img}" />
					<TextBlock
						Name="tb1"
						TextBlock.FontWeight="Bold"
						FrameworkElement.Style="{DynamicResource DTTextBlockStyle}"
						TextBlock.Text="{Binding Text}" />
				</StackPanel>
				<DataTemplate.Triggers>
					<DataTrigger
						Value="True"
						Binding="{Binding IsMouseOver, ElementName=grid}">
						<Setter
							TargetName="tb1"
							Value="{DynamicResource ConfigItemHoverForeground}"
							Property="TextBlock.Foreground" />
					</DataTrigger>
				</DataTemplate.Triggers>
			</DataTemplate>
			<DataTemplate
				x:Key="SelectedSubMenuDataDataTemplate"
				DataType="{x:Type overlayMenu:TViewTabs}">
				<StackPanel
					FrameworkElement.Name="grid"
					FrameworkElement.Height="20"
					FrameworkElement.Margin="12,0"
					Orientation="Horizontal">
					<recolorableimages:RecolorableSVG
						Name="ico"
						FrameworkElement.Margin="4,0,5,0"
						FrameworkElement.Style="{StaticResource PreferencesRecolorableSVG}"
						Drawing="{Binding Img}"
						ColorShiftBrush="{Binding GameProfilesService.OverlayCircleBindingCollection.CollectionBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=infrastructure1:IBaseServicesContainer}}" />
					<TextBlock
						Name="tb1"
						TextBlock.FontWeight="Bold"
						FrameworkElement.Style="{DynamicResource DTTextBlockStyle}"
						TextBlock.Foreground="{Binding GameProfilesService.OverlayCircleBindingCollection.CollectionBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=infrastructure1:IBaseServicesContainer}}"
						TextBlock.Text="{Binding Text}" />
				</StackPanel>
			</DataTemplate>
		</ResourceDictionary>
	</FrameworkElement.Resources>
	<Control.Template>
		<ControlTemplate
			TargetType="{x:Type overlayMenu:OverlayMenuView}">
			<Grid
				FrameworkElement.Margin="0,30,0,50"
				FrameworkElement.HorizontalAlignment="Stretch"
				ZIndex="1000"
				FrameworkElement.VerticalAlignment="Stretch">
				<ListBox
					FrameworkElement.Name="menusList"
					FrameworkElement.VerticalAlignment="Top"
					FrameworkElement.HorizontalAlignment="Center"
					UIElement.Focusable="False"
					ScrollViewer.CanContentScroll="False"
					ScrollViewer.HorizontalScrollBarVisibility="Auto"
					ScrollViewer.VerticalScrollBarVisibility="Hidden"
					SelectionMode="Single"
					ItemsControl.ItemsSource="{Binding ViewTabs, RelativeSource={RelativeSource FindAncestor, AncestorType=overlayMenu:OverlayMenuView}}"
					SelectedItem="{Binding CurrentViewTab, Delay=1, RelativeSource={RelativeSource FindAncestor, AncestorType=overlayMenu:OverlayMenuView}}"
					PreviewMouseRightButtonDown="ConfigsList_OnPreviewMouseRightButtonDown"
					PreviewMouseWheel="ConfigsList_OnPreviewMouseWheel">
					<FrameworkElement.Resources>
						<ResourceDictionary>
							<Style
								x:Key="{x:Type ListBoxItem}"
								BasedOn="{StaticResource {x:Type ListBoxItem}}"
								TargetType="{x:Type ListBoxItem}">
								<Setter
									Property="ContentControl.ContentTemplate"
									Value="{StaticResource SubMenuDataDataTemplate}" />
								<Style.Triggers>
									<Trigger
										Property="ListBoxItem.IsSelected"
										Value="True">
										<Setter
											Property="ContentControl.ContentTemplate"
											Value="{StaticResource SelectedSubMenuDataDataTemplate}" />
									</Trigger>
								</Style.Triggers>
							</Style>
						</ResourceDictionary>
					</FrameworkElement.Resources>
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<StackPanel
								CanHorizontallyScroll="True"
								CanVerticallyScroll="False"
								Orientation="Horizontal" />
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
				</ListBox>
				<overlayMenu:RadialMenuPreferences
					UIElement.Visibility="{Binding IsPrefsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=overlayMenu:OverlayMenuView}, Converter={converters2:BooleanToVisibilityConverter}}" />
				<Grid
					FrameworkElement.HorizontalAlignment="Stretch"
					ZIndex="1000"
					FrameworkElement.Margin="0,35,0,0"
					FrameworkElement.VerticalAlignment="Stretch"
					UIElement.Visibility="{Binding IsPrefsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=overlayMenu:OverlayMenuView}, Converter={converters2:InvertedBooleanToVisibilityConverter}}">
					<Ellipse
						FrameworkElement.HorizontalAlignment="Center"
						FrameworkElement.VerticalAlignment="Center"
						FrameworkElement.Width="{Binding Width, ElementName=MainCircle}"
						FrameworkElement.Height="{Binding Height, ElementName=MainCircle}"
						Shape.Fill="{Binding Background, ElementName=MainCircle}" />
					<Controls1:RadialMenu
						Controls1:RadialMenu.Name="MainCircle"
						Control.Background="#33000000"
						Controls1:RadialMenu.IsUI="True"
						FrameworkElement.HorizontalAlignment="Center"
						FrameworkElement.VerticalAlignment="Center"
						Panel.ZIndex="1"
						Controls1:RadialMenu.HalfShiftedItems="{x:Static DTOverlay:OverlayConstants.C_HALF_SHIFTED_ITEM}"
						Controls1:RadialMenu.MinStrokeThickness="95"
						Controls1:RadialMenu.MaxStrokeThickness="120"
						UIElement.Opacity="1"
						Controls1:RadialMenu.IsOpen="True"
						Controls1:RadialMenu.IsSubMenuShown="{Binding GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.CurrentSector.IsSubmenuVisible}"
						Controls1:RadialMenu.CurrentItemIndex="{Binding GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.CurrentSector.NumberSector}"
						Controls1:RadialMenu.Items="{Binding GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.Sectors}" />
					<Controls1:RadialMenu
						Controls1:RadialMenu.Name="SubCircle"
						Control.Background="#33000000"
						Controls1:RadialMenu.IsUI="True"
						FrameworkElement.HorizontalAlignment="Center"
						FrameworkElement.VerticalAlignment="Center"
						Panel.ZIndex="1"
						FrameworkElement.Margin="0,0,0,0"
						Controls1:RadialMenu.IsSubMenu="True"
						Controls1:RadialMenu.HalfShiftedItems="{x:Static DTOverlay:OverlayConstants.C_HALF_SHIFTED_ITEM}"
						Controls1:RadialMenu.MinStrokeThickness="75"
						UIElement.Opacity="1"
						Controls1:RadialMenu.IsOpen="True"
						Controls1:RadialMenu.HostRadialMenuItem="{Binding CurrentItem, ElementName=MainCircle}"
						Controls1:RadialMenu.CurrentItemIndex="{Binding GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.CurrentSector.Submenu.CurrentSector.NumberSector}"
						Controls1:RadialMenu.Items="{Binding GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.CurrentSector.Submenu.Sectors}"
						UIElement.Visibility="{Binding GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.CurrentSector.IsSubmenuVisible, FallbackValue=Collapsed, Converter={converters2:BooleanToVisibilityConverter}}" />
					<Controls1:RadialMenuCentralItem
						Panel.ZIndex="0"
						FrameworkElement.HorizontalAlignment="Center"
						FrameworkElement.VerticalAlignment="Center">
						<Grid
							FrameworkElement.HorizontalAlignment="Center"
							FrameworkElement.VerticalAlignment="Center">
							<Grid.RowDefinitions>
								<RowDefinition
									RowDefinition.Height="0.5*" />
								<RowDefinition
									RowDefinition.Height="0.5*" />
							</Grid.RowDefinitions>
							<StackPanel
								Name="MainOrSubmenuSP"
								Grid.Row="0"
								Orientation="Vertical"
								FrameworkElement.HorizontalAlignment="Center"
								FrameworkElement.VerticalAlignment="Center"
								ZIndex="2">
								<Border
									FrameworkElement.Width="44"
									FrameworkElement.Height="44"
									CornerRadius="99"
									FrameworkElement.HorizontalAlignment="Stretch"
									Panel.ZIndex="2"
									FrameworkElement.VerticalAlignment="Stretch">
									<Border.Background>
										<MultiBinding
											Converter="{converters2:ColorToSolidBrushConverter}">
											<Binding
												Path="GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.MainOrSubmenu.CurrentSector.SectorColor.A" />
											<Binding
												Path="GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.MainOrSubmenu.CurrentSector.SectorColor.R" />
											<Binding
												Path="GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.MainOrSubmenu.CurrentSector.SectorColor.G" />
											<Binding
												Path="GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.MainOrSubmenu.CurrentSector.SectorColor.B" />
										</MultiBinding>
									</Border.Background>
									<recolorableimages:RecolorableSVG
										FrameworkElement.HorizontalAlignment="Center"
										FrameworkElement.VerticalAlignment="Center"
										FrameworkElement.Width="28"
										Panel.ZIndex="2"
										FrameworkElement.Height="28"
										IsColorShift="True"
										Drawing="{Binding GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.MainOrSubmenu.CurrentSector.SelectedIcon.Drawing}">
										<recolorableimages:RecolorableSVG.ColorShiftBrush>
											<MultiBinding>
												<MultiBinding.Converter>
													<converters21:BrightnessColorConverter />
												</MultiBinding.Converter>
												<Binding
													Path="GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.MainOrSubmenu.CurrentSector.SectorColor.A" />
												<Binding
													Path="GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.MainOrSubmenu.CurrentSector.SectorColor.R" />
												<Binding
													Path="GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.MainOrSubmenu.CurrentSector.SectorColor.G" />
												<Binding
													Path="GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.MainOrSubmenu.CurrentSector.SectorColor.B" />
											</MultiBinding>
										</recolorableimages:RecolorableSVG.ColorShiftBrush>
									</recolorableimages:RecolorableSVG>
								</Border>
								<TextBlock
									FrameworkElement.Margin="10,3,10,0"
									FrameworkElement.HorizontalAlignment="Center"
									FrameworkElement.Width="160"
									FrameworkElement.VerticalAlignment="Center"
									TextBlock.TextWrapping="NoWrap"
									TextAlignment="Center"
									TextBlock.TextTrimming="CharacterEllipsis"
									Panel.ZIndex="2"
									FrameworkElement.Style="{StaticResource DTTextBlockStyle}"
									TextBlock.Text="{Binding GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.MainOrSubmenu.CurrentSector.XBBinding.CurrentActivatorXBBinding.Description}"
									UIElement.Visibility="{Binding GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.MainOrSubmenu.CurrentSector.XBBinding.CurrentActivatorXBBinding.Description, ConverterParameter=i, Converter={converters2:StringIsNullOrEmptyToHiddenVisibility}}" />
							</StackPanel>
							<StackPanel
								Name="MainSP"
								Grid.Row="0"
								Orientation="Vertical"
								FrameworkElement.HorizontalAlignment="Center"
								FrameworkElement.VerticalAlignment="Center"
								ZIndex="2"
								UIElement.Visibility="{Binding GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.MainOrSubmenu.CurrentSector, Converter={converters2:ValueIsNullToVisibilityConverter}}">
								<Border
									FrameworkElement.Width="44"
									FrameworkElement.Height="44"
									CornerRadius="99"
									FrameworkElement.HorizontalAlignment="Stretch"
									Panel.ZIndex="2"
									FrameworkElement.VerticalAlignment="Stretch">
									<Border.Background>
										<MultiBinding
											Converter="{converters2:ColorToSolidBrushConverter}">
											<Binding
												Path="GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.CurrentSector.SectorColor.A" />
											<Binding
												Path="GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.CurrentSector.SectorColor.R" />
											<Binding
												Path="GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.CurrentSector.SectorColor.G" />
											<Binding
												Path="GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.CurrentSector.SectorColor.B" />
										</MultiBinding>
									</Border.Background>
									<recolorableimages:RecolorableSVG
										FrameworkElement.HorizontalAlignment="Center"
										FrameworkElement.VerticalAlignment="Center"
										FrameworkElement.Width="28"
										Panel.ZIndex="2"
										FrameworkElement.Height="28"
										IsColorShift="True"
										Drawing="{Binding GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.CurrentSector.SelectedIcon.Drawing}">
										<recolorableimages:RecolorableSVG.ColorShiftBrush>
											<MultiBinding>
												<MultiBinding.Converter>
													<converters21:BrightnessColorConverter />
												</MultiBinding.Converter>
												<Binding
													Path="GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.CurrentSector.SectorColor.A" />
												<Binding
													Path="GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.CurrentSector.SectorColor.R" />
												<Binding
													Path="GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.CurrentSector.SectorColor.G" />
												<Binding
													Path="GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.CurrentSector.SectorColor.B" />
											</MultiBinding>
										</recolorableimages:RecolorableSVG.ColorShiftBrush>
									</recolorableimages:RecolorableSVG>
								</Border>
								<TextBlock
									FrameworkElement.Margin="10,3,10,0"
									FrameworkElement.HorizontalAlignment="Center"
									FrameworkElement.Width="160"
									FrameworkElement.VerticalAlignment="Center"
									TextBlock.TextWrapping="NoWrap"
									TextAlignment="Center"
									TextBlock.TextTrimming="CharacterEllipsis"
									Panel.ZIndex="2"
									FrameworkElement.Style="{StaticResource DTTextBlockStyle}"
									TextBlock.Text="{Binding GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.CurrentSector.XBBinding.CurrentActivatorXBBinding.Description}"
									UIElement.Visibility="{Binding GameProfilesService.CurrentGame.CurrentConfig.ConfigData.OverlayMenu.Circle.CurrentSector.XBBinding.CurrentActivatorXBBinding.Description, ConverterParameter=i, Converter={converters2:StringIsNullOrEmptyToHiddenVisibility}}" />
							</StackPanel>
							<StackPanel
								Orientation="Vertical"
								Grid.Row="1"
								FrameworkElement.HorizontalAlignment="Center"
								FrameworkElement.VerticalAlignment="Top"
								FrameworkElement.Margin="0,10,0,0"
								ZIndex="2">
								<Grid
									FrameworkElement.Margin="0,2,0,0">
									<Grid.ColumnDefinitions>
										<ColumnDefinition
											ColumnDefinition.Width="0.5*" />
										<ColumnDefinition
											ColumnDefinition.Width="0.5*" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition
											RowDefinition.Height="Auto" />
										<RowDefinition
											RowDefinition.Height="Auto" />
									</Grid.RowDefinitions>
									<overlayMenu:AssociatedControllerButtonView
										IsShowDescription="False"
										Control.FontSize="12"
										IsShowNotSelected="True"
										UseLayoutRounding="True"
										SnapsToDevicePixels="True"
										Control.Foreground="#AAAAAA"
										AssociatedControllerButton="{Binding UIUseButton, RelativeSource={RelativeSource FindAncestor, AncestorType=overlayMenu:OverlayMenuView}}"
										ControllerType="{Binding UIUseButtonControllerType, RelativeSource={RelativeSource FindAncestor, AncestorType=overlayMenu:OverlayMenuView}}">
										<FrameworkElement.Style>
											<Style
												TargetType="{x:Type overlayMenu:AssociatedControllerButtonView}">
												<Style.Triggers>
													<DataTrigger
														Value="false"
														Binding="{Binding UIUseButton.IsKeyScanCode, RelativeSource={RelativeSource FindAncestor, AncestorType=overlayMenu:OverlayMenuView}}">
														<Setter
															Property="AutomationProperties.AutomationId"
															Value="{Binding UIUseButton.GamepadButton, RelativeSource={RelativeSource FindAncestor, AncestorType=overlayMenu:OverlayMenuView}}" />
													</DataTrigger>
													<DataTrigger
														Value="true"
														Binding="{Binding UIUseButton.IsKeyScanCode, RelativeSource={RelativeSource FindAncestor, AncestorType=overlayMenu:OverlayMenuView}}">
														<Setter
															Property="AutomationProperties.AutomationId"
															Value="{Binding UIUseButton.KeyScanCode.Description, RelativeSource={RelativeSource FindAncestor, AncestorType=overlayMenu:OverlayMenuView}}" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</FrameworkElement.Style>
									</overlayMenu:AssociatedControllerButtonView>
									<TextBlock
										Grid.Column="1"
										Grid.Row="0"
										FrameworkElement.Margin="4,3,0,0"
										TextBlock.FontSize="12"
										FrameworkElement.VerticalAlignment="Center"
										TextBlock.Foreground="#AAAAAA"
										FrameworkElement.Style="{DynamicResource DTTextBlockStyle}"
										TextBlock.Text="{localization:Translate {x:Static s:StringConsts.STR_APPLY}}" />
									<overlayMenu:AssociatedControllerButtonView
										IsShowDescription="False"
										Grid.Column="0"
										Grid.Row="1"
										Control.FontSize="12"
										IsShowNotSelected="True"
										UseLayoutRounding="True"
										SnapsToDevicePixels="True"
										Control.Foreground="#AAAAAA"
										AssociatedControllerButton="{Binding UICancelButton, RelativeSource={RelativeSource FindAncestor, AncestorType=overlayMenu:OverlayMenuView}}"
										ControllerType="{Binding UICancelButtonControllerType, RelativeSource={RelativeSource FindAncestor, AncestorType=overlayMenu:OverlayMenuView}}">
										<FrameworkElement.Style>
											<Style
												TargetType="{x:Type overlayMenu:AssociatedControllerButtonView}">
												<Style.Triggers>
													<DataTrigger
														Value="false"
														Binding="{Binding UICancelButton.IsKeyScanCode, RelativeSource={RelativeSource FindAncestor, AncestorType=overlayMenu:OverlayMenuView}}">
														<Setter
															Property="AutomationProperties.AutomationId"
															Value="{Binding UICancelButton.GamepadButton, RelativeSource={RelativeSource FindAncestor, AncestorType=overlayMenu:OverlayMenuView}}" />
													</DataTrigger>
													<DataTrigger
														Value="true"
														Binding="{Binding UICancelButton.IsKeyScanCode, RelativeSource={RelativeSource FindAncestor, AncestorType=overlayMenu:OverlayMenuView}}">
														<Setter
															Property="AutomationProperties.AutomationId"
															Value="{Binding UICancelButton.KeyScanCode.Description, RelativeSource={RelativeSource FindAncestor, AncestorType=overlayMenu:OverlayMenuView}}" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</FrameworkElement.Style>
									</overlayMenu:AssociatedControllerButtonView>
									<TextBlock
										Grid.Column="1"
										Grid.Row="1"
										FrameworkElement.Margin="4,3,0,0"
										TextBlock.FontSize="12"
										FrameworkElement.VerticalAlignment="Center"
										TextBlock.Foreground="#AAAAAA"
										FrameworkElement.Style="{DynamicResource DTTextBlockStyle}"
										TextBlock.Text="{localization:Translate {x:Static s:StringConsts.IDS_WIZARD_BACK}}" />
								</Grid>
							</StackPanel>
						</Grid>
					</Controls1:RadialMenuCentralItem>
				</Grid>
			</Grid>
		</ControlTemplate>
	</Control.Template>
</controls:BaseServicesDataContextControl>
