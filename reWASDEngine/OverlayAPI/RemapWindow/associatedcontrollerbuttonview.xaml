<UserControl
	x:Class="reWASDEngine.Services.OverlayAPI.AssociatedControllerButtonView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:converters="clr-namespace:DiscSoft.NET.Common.Utils.Converters;assembly=DiscSoft.NET.Common" xmlns:converters1="clr-namespace:XBEliteWPF.Utils.Converters" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:keyScanCodes="clr-namespace:XBEliteWPF.Infrastructure.reWASDMapping.KeyScanCodes;assembly=reWASDCommon" xmlns:local="clr-namespace:reWASDEngine.Services.OverlayAPI" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:recolorableImages="clr-namespace:DiscSoft.NET.Common.View.RecolorableImages;assembly=DiscSoft.NET.Common">
	<FrameworkElement.Resources>
		<ResourceDictionary>
			<DataTemplate
				x:Key="KeyScanCodeDataShiftTemplate"
				DataType="{x:Type keyScanCodes:KeyScanCodeV2}">
				<Grid
					ToolTip="{Binding ToolTip}">
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							ColumnDefinition.Width="Auto" />
						<ColumnDefinition
							ColumnDefinition.Width="*" />
					</Grid.ColumnDefinitions>
					<ContentControl
						FrameworkElement.Margin="0,2,0,0"
						ContentControl.ContentTemplate="{StaticResource KeyScanCodeIconOnly}"
						ContentControl.Content="{Binding}"
						Control.Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=ContentControl}}" />
					<TextBlock
						Grid.Column="1"
						FrameworkElement.MinHeight="0"
						FrameworkElement.Margin="2,0,0,0"
						FrameworkElement.VerticalAlignment="Center"
						TextBlock.TextWrapping="NoWrap"
						TextBlock.FontSize="{Binding FontSize, RelativeSource={RelativeSource FindAncestor, AncestorType=ContentControl}}"
						AutomationProperties.AutomationId="{Binding Description}"
						TextBlock.Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=ContentControl}}">
						<FrameworkElement.Style>
							<Style
								TargetType="{x:Type TextBlock}"
								BasedOn="{StaticResource DTTextBlockStyle}">
								<Style.Triggers>
									<MultiDataTrigger>
										<MultiDataTrigger.Conditions>
											<Condition
												Value="False"
												Binding="{Binding IsShowDescription, RelativeSource={RelativeSource AncestorType={x:Type local:AssociatedControllerButtonView}}}" />
											<Condition
												Value="True"
												Binding="{Binding IsMouse}" />
										</MultiDataTrigger.Conditions>
										<MultiDataTrigger.Setters>
											<Setter
												Property="UIElement.Visibility"
												Value="Collapsed" />
										</MultiDataTrigger.Setters>
									</MultiDataTrigger>
									<MultiDataTrigger>
										<MultiDataTrigger.Conditions>
											<Condition
												Value="False"
												Binding="{Binding IsShowDescription, RelativeSource={RelativeSource AncestorType={x:Type local:AssociatedControllerButtonView}}}" />
											<Condition
												Value="True"
												Binding="{Binding IsKeyboard}" />
										</MultiDataTrigger.Conditions>
										<MultiDataTrigger.Setters>
											<Setter
												Property="TextBlock.Text"
												Value="{Binding ShortFriendlyName}" />
										</MultiDataTrigger.Setters>
									</MultiDataTrigger>
									<MultiDataTrigger>
										<MultiDataTrigger.Conditions>
											<Condition
												Value="True"
												Binding="{Binding IsShowDescription, RelativeSource={RelativeSource AncestorType={x:Type local:AssociatedControllerButtonView}}}" />
										</MultiDataTrigger.Conditions>
										<MultiDataTrigger.Setters>
											<Setter
												Property="TextBlock.Text"
												Value="{Binding FriendlyName}" />
										</MultiDataTrigger.Setters>
									</MultiDataTrigger>
								</Style.Triggers>
							</Style>
						</FrameworkElement.Style>
					</TextBlock>
				</Grid>
			</DataTemplate>
		</ResourceDictionary>
	</FrameworkElement.Resources>
	<Control.Template>
		<ControlTemplate
			TargetType="{x:Type local:AssociatedControllerButtonView}">
			<Grid>
				<recolorableImages:RecolorableSVG
					ColorShiftBrush="{TemplateBinding Control.Foreground}"
					IsColorShift="True">
					<recolorableImages:RecolorableSVG.Drawing>
						<MultiBinding
							ConverterParameter="Extended"
							Converter="{converters1:GamepadButtonAnnotationIconConverter}">
							<Binding
								Path="AssociatedControllerButton.GamepadButton"
								RelativeSource="{RelativeSource TemplatedParent}" />
							<Binding
								Path="ControllerType"
								RelativeSource="{RelativeSource TemplatedParent}" />
						</MultiBinding>
					</recolorableImages:RecolorableSVG.Drawing>
					<UIElement.Visibility>
						<MultiBinding
							ConverterParameter="({0} || ({1} &amp;&amp; !{2}))"
							Converter="{converters:MultiBooleanParametrizedConverterToVisibilityConverter}">
							<Binding
								Path="AssociatedControllerButton.IsGamepad"
								RelativeSource="{RelativeSource TemplatedParent}" />
							<Binding
								Path="IsShowNotSelected"
								RelativeSource="{RelativeSource TemplatedParent}" />
							<Binding
								Path="AssociatedControllerButton.IsKeyScanCode"
								RelativeSource="{RelativeSource TemplatedParent}" />
						</MultiBinding>
					</UIElement.Visibility>
				</recolorableImages:RecolorableSVG>
				<ContentControl
					ContentControl.ContentTemplate="{DynamicResource KeyScanCodeDataShiftTemplate}"
					Control.FontSize="{TemplateBinding Control.FontSize}"
					Control.Foreground="{TemplateBinding Control.Foreground}"
					ContentControl.Content="{Binding AssociatedControllerButton.KeyScanCode, RelativeSource={RelativeSource TemplatedParent}}"
					UIElement.Visibility="{Binding AssociatedControllerButton.IsKeyScanCode, RelativeSource={RelativeSource TemplatedParent}, Converter={converters:BooleanToVisibilityConverter}}" />
			</Grid>
		</ControlTemplate>
	</Control.Template>
</UserControl>
