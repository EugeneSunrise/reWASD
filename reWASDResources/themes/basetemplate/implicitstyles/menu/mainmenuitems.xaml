<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary
			Source="MainMenuItems/SubMenuHeaderTemplate.xaml" />
		<ResourceDictionary
			Source="MainMenuItems/SubmenuItemTemplate.xaml" />
		<ResourceDictionary
			Source="MainMenuItems/TopLevelHeaderTemplate.xaml" />
	</ResourceDictionary.MergedDictionaries>
	<Geometry
		x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>
	<Geometry
		x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
	<Geometry
		x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
	<Geometry
		x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
	<Style
		x:Key="{x:Type MenuItem}"
		TargetType="{x:Type MenuItem}">
		<Setter
			Property="Control.HorizontalContentAlignment"
			Value="Stretch" />
		<Setter
			Property="FrameworkElement.HorizontalAlignment"
			Value="Stretch" />
		<Setter
			Property="Control.VerticalContentAlignment"
			Value="Center" />
		<Setter
			Property="FrameworkElement.VerticalAlignment"
			Value="Stretch" />
		<Setter
			Property="Control.Padding"
			Value="14,0" />
		<Setter
			Property="FrameworkElement.Height"
			Value="33" />
		<Setter
			Property="Control.Foreground"
			Value="{DynamicResource ForegroundBrush}" />
		<Setter
			Property="Control.Background"
			Value="{DynamicResource MenuBackground}" />
		<Setter
			Property="Control.BorderBrush"
			Value="{DynamicResource MenuBorder}" />
		<Setter
			Property="Control.BorderThickness"
			Value="0,0,0,0" />
		<Setter
			Property="ScrollViewer.PanningMode"
			Value="Both" />
		<Setter
			Property="Stylus.IsFlicksEnabled"
			Value="False" />
		<Setter
			Property="FrameworkElement.OverridesDefaultStyle"
			Value="True" />
		<Style.Triggers>
			<Trigger
				Property="MenuItem.Role"
				Value="TopLevelHeader">
				<Setter
					Property="Control.Template"
					Value="{DynamicResource TopLevelHeaderTemplate}" />
			</Trigger>
			<Trigger
				Property="MenuItem.Role"
				Value="TopLevelItem">
				<Setter
					Property="Control.Template"
					Value="{DynamicResource TopLevelHeaderTemplate}" />
			</Trigger>
			<Trigger
				Property="MenuItem.Role"
				Value="SubmenuHeader">
				<Setter
					Property="Control.Template"
					Value="{DynamicResource SubmenuHeaderTemplate}" />
			</Trigger>
			<Trigger
				Property="MenuItem.Role"
				Value="SubmenuItem">
				<Setter
					Property="Control.Template"
					Value="{DynamicResource SubmenuItemTemplate}" />
			</Trigger>
			<Trigger
				Property="UIElement.IsEnabled"
				Value="False">
				<Setter
					Property="Control.Foreground"
					Value="{DynamicResource MenuDisabledForeground}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style
		x:Key="{x:Static MenuItem.SeparatorStyleKey}"
		TargetType="{x:Type Separator}">
		<Setter
			Property="Control.Background"
			Value="{DynamicResource MenuSeparatorBrush}" />
		<Setter
			Property="FrameworkElement.Height"
			Value="10" />
		<Setter
			Property="FrameworkElement.Margin"
			Value="0,0,0,0" />
		<Setter
			Property="UIElement.Focusable"
			Value="false" />
		<Setter
			Property="Control.Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type Separator}">
					<Border
						FrameworkElement.Height="1"
						Border.Background="{TemplateBinding Control.Background}"
						Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
						Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
						SnapsToDevicePixels="true" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		x:Key="{x:Type Separator}"
		TargetType="{x:Type Separator}">
		<Setter
			Property="Control.Background"
			Value="{DynamicResource MenuSeparatorBrush}" />
		<Setter
			Property="FrameworkElement.Height"
			Value="10" />
		<Setter
			Property="FrameworkElement.Margin"
			Value="0,0,0,0" />
		<Setter
			Property="UIElement.Focusable"
			Value="false" />
		<Setter
			Property="Control.Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type Separator}">
					<Border
						FrameworkElement.Height="1"
						Border.Background="{TemplateBinding Control.Background}"
						Border.BorderBrush="{TemplateBinding Control.BorderBrush}"
						Border.BorderThickness="{TemplateBinding Control.BorderThickness}"
						SnapsToDevicePixels="true" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate
		x:Key="{ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}"
		TargetType="{x:Type ContentControl}">
		<Border
			Border.Background="{DynamicResource MenuBackground}"
			Border.BorderBrush="{DynamicResource MenuBorder}"
			Border.BorderThickness="1">
			<Grid>
				<ContentPresenter
					Grid.ColumnSpan="2"
					FrameworkElement.Margin="1,0" />
			</Grid>
		</Border>
	</ControlTemplate>
	<Style
		x:Key="MenuScrollButton"
		TargetType="{x:Type RepeatButton}"
		BasedOn="{x:Null}">
		<Setter
			Property="ButtonBase.ClickMode"
			Value="Hover" />
		<Setter
			Property="FrameworkElement.MinWidth"
			Value="0" />
		<Setter
			Property="FrameworkElement.MinHeight"
			Value="0" />
		<Setter
			Property="Control.Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type RepeatButton}">
					<DockPanel
						Panel.Background="#00FFFFFF"
						SnapsToDevicePixels="true">
						<Rectangle
							Name="R1"
							FrameworkElement.Width="1"
							DockPanel.Dock="Right"
							Shape.Fill="#00FFFFFF" />
						<Rectangle
							Name="B1"
							FrameworkElement.Height="1"
							DockPanel.Dock="Bottom"
							Shape.Fill="#00FFFFFF" />
						<Rectangle
							Name="L1"
							FrameworkElement.Width="1"
							DockPanel.Dock="Left"
							Shape.Fill="#00FFFFFF" />
						<Rectangle
							Name="T1"
							FrameworkElement.Height="1"
							DockPanel.Dock="Top"
							Shape.Fill="#00FFFFFF" />
						<ContentPresenter
							Name="ContentContainer"
							FrameworkElement.Margin="2,2,2,2"
							FrameworkElement.HorizontalAlignment="Center"
							FrameworkElement.VerticalAlignment="Center" />
					</DockPanel>
					<ControlTemplate.Triggers>
						<Trigger
							Property="ButtonBase.IsPressed"
							Value="true">
							<Setter
								TargetName="R1"
								Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
								Property="Shape.Fill" />
							<Setter
								TargetName="B1"
								Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
								Property="Shape.Fill" />
							<Setter
								TargetName="L1"
								Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
								Property="Shape.Fill" />
							<Setter
								TargetName="T1"
								Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
								Property="Shape.Fill" />
							<Setter
								TargetName="ContentContainer"
								Property="FrameworkElement.Margin"
								Value="3,3,1,1" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<MenuScrollingVisibilityConverter
		x:Key="MenuScrollingVisibilityConverter" />
	<Style
		x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}"
		TargetType="{x:Type ScrollViewer}"
		BasedOn="{x:Null}">
		<Setter
			Property="ScrollViewer.HorizontalScrollBarVisibility"
			Value="Hidden" />
		<Setter
			Property="ScrollViewer.VerticalScrollBarVisibility"
			Value="Auto" />
		<Setter
			Property="Control.Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type ScrollViewer}">
					<Grid
						SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition
								ColumnDefinition.Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition
								RowDefinition.Height="Auto" />
							<RowDefinition
								RowDefinition.Height="*" />
							<RowDefinition
								RowDefinition.Height="Auto" />
						</Grid.RowDefinitions>
						<RepeatButton
							Grid.Row="0"
							Grid.Column="0"
							ButtonBase.Command="{x:Static ScrollBar.LineUpCommand}"
							UIElement.Focusable="false"
							FrameworkElement.Style="{StaticResource MenuScrollButton}"
							ButtonBase.CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
							<UIElement.Visibility>
								<MultiBinding
									ConverterParameter="0"
									FallbackValue="Visibility.Collapsed"
									Converter="{StaticResource MenuScrollingVisibilityConverter}">
									<Binding
										Path="ComputedVerticalScrollBarVisibility"
										RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding
										Path="VerticalOffset"
										RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding
										Path="ExtentHeight"
										RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding
										Path="ViewportHeight"
										RelativeSource="{RelativeSource TemplatedParent}" />
								</MultiBinding>
							</UIElement.Visibility>
							<Path
								Shape.Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
								Path.Data="{StaticResource UpArrow}" />
						</RepeatButton>
						<Border
							Grid.Row="1"
							Grid.Column="0">
							<ScrollContentPresenter
								FrameworkElement.Margin="{TemplateBinding Control.Padding}" />
						</Border>
						<RepeatButton
							Grid.Row="2"
							Grid.Column="0"
							ButtonBase.Command="{x:Static ScrollBar.LineDownCommand}"
							UIElement.Focusable="false"
							FrameworkElement.Style="{StaticResource MenuScrollButton}"
							ButtonBase.CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
							<UIElement.Visibility>
								<MultiBinding
									ConverterParameter="100"
									FallbackValue="Visibility.Collapsed"
									Converter="{StaticResource MenuScrollingVisibilityConverter}">
									<Binding
										Path="ComputedVerticalScrollBarVisibility"
										RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding
										Path="VerticalOffset"
										RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding
										Path="ExtentHeight"
										RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding
										Path="ViewportHeight"
										RelativeSource="{RelativeSource TemplatedParent}" />
								</MultiBinding>
							</UIElement.Visibility>
							<Path
								Shape.Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
								Path.Data="{StaticResource DownArrow}" />
						</RepeatButton>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
