<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:buttons="clr-namespace:DiscSoft.NET.Common.View.Controls.Buttons;assembly=DiscSoft.NET.Common" xmlns:characterRestrictingTextBoxes="clr-namespace:DiscSoft.NET.Common.View.Controls.CharacterRestrictingTextBoxes;assembly=DiscSoft.NET.Common" xmlns:controls="clr-namespace:DiscSoft.NET.Common.View.Controls;assembly=DiscSoft.NET.Common" xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">
	<Style
		x:Key="{x:Type TextBox}"
		TargetType="{x:Type TextBox}">
		<Setter
			Property="Control.Foreground"
			Value="#FF000000" />
		<Setter
			Property="Control.Background"
			Value="#FFFFFFFF" />
	</Style>
	<Style
		x:Key="{x:Type controls:WaterMarkTextBox}"
		BasedOn="{StaticResource {x:Type controls:WaterMarkTextBox}}"
		TargetType="{x:Type controls:WaterMarkTextBox}">
		<Setter
			Property="Control.BorderThickness"
			Value="1" />
		<Setter
			Property="Control.Background"
			Value="#00FFFFFF" />
		<Setter
			Property="Control.Foreground"
			Value="{DynamicResource ButtonForeground}" />
		<Setter xmlns:textboxes="clr-namespace:DiscSoft.NET.Common.View.Controls.TextBoxes;assembly=DiscSoft.NET.Common"
			Property="textboxes:BaseColoredTextBox.HighlightedForeground"
			Value="{DynamicResource CreamBrushHighlighted}" />
		<Setter
			Property="Control.BorderBrush"
			Value="{DynamicResource CreamBrush}" />
		<Setter
			Property="BaseColoredTextBox.HighlightedBorderBrush"
			Value="{DynamicResource CreamBrushHighlighted}" />
	</Style>
	<Style
		x:Key="{x:Type characterRestrictingTextBoxes:BlackListCharactersTextBox}"
		BasedOn="{StaticResource {x:Type controls:WaterMarkTextBox}}"
		TargetType="{x:Type characterRestrictingTextBoxes:BlackListCharactersTextBox}" />
	<Style
		x:Key="{x:Type characterRestrictingTextBoxes:DigitBox}"
		BasedOn="{StaticResource {x:Type controls:WaterMarkTextBox}}"
		TargetType="{x:Type characterRestrictingTextBoxes:DigitBox}" />
	<Style
		x:Key="{x:Type characterRestrictingTextBoxes:IpTextBox}"
		BasedOn="{StaticResource {x:Type controls:WaterMarkTextBox}}"
		TargetType="{x:Type characterRestrictingTextBoxes:IpTextBox}" />
	<Style
		x:Key="{x:Type characterRestrictingTextBoxes:LimitedTextBox}"
		BasedOn="{StaticResource {x:Type controls:WaterMarkTextBox}}"
		TargetType="{x:Type characterRestrictingTextBoxes:LimitedTextBox}" />
	<Style
		x:Key="{x:Type characterRestrictingTextBoxes:PathTextBox}"
		BasedOn="{StaticResource {x:Type controls:WaterMarkTextBox}}"
		TargetType="{x:Type characterRestrictingTextBoxes:PathTextBox}" />
	<Style
		x:Key="{x:Type characterRestrictingTextBoxes:RestrictionModeTextBox}"
		BasedOn="{StaticResource {x:Type controls:WaterMarkTextBox}}"
		TargetType="{x:Type characterRestrictingTextBoxes:RestrictionModeTextBox}" />
	<Style
		x:Key="{x:Type characterRestrictingTextBoxes:DigitBoxUpDown}"
		BasedOn="{StaticResource {x:Type characterRestrictingTextBoxes:DigitBox}}"
		TargetType="{x:Type characterRestrictingTextBoxes:DigitBoxUpDown}">
		<Setter
			Property="UIElement.SnapsToDevicePixels"
			Value="True" />
		<Setter
			Property="UIElement.Focusable"
			Value="False" />
		<Setter
			Property="Control.Foreground"
			Value="#FFFFFFFF" />
		<Setter
			Property="Control.Background"
			Value="#00FFFFFF" />
		<Setter
			Property="Control.BorderThickness"
			Value="0" />
		<Setter
			Property="characterRestrictingTextBoxes:DigitBoxUpDown.UpDownContainerMargin"
			Value="5,0,0,0" />
		<Setter
			Property="FrameworkElement.HorizontalAlignment"
			Value="Right" />
		<Setter
			Property="Control.HorizontalContentAlignment"
			Value="Right" />
		<Setter
			Property="Control.BorderBrush"
			Value="{DynamicResource CreamBrush}" />
		<Setter
			Property="characterRestrictingTextBoxes:DigitBox.IsCanStartWithZero"
			Value="True" />
		<Setter
			Property="characterRestrictingTextBoxes:DigitBox.IsEmptyAllowed"
			Value="False" />
		<Setter
			Property="Control.Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type characterRestrictingTextBoxes:DigitBoxUpDown}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition
								ColumnDefinition.Width="*" />
							<ColumnDefinition
								ColumnDefinition.Width="Auto" />
						</Grid.ColumnDefinitions>
						<characterRestrictingTextBoxes:DigitBox
							Control.HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
							Control.VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
							AcceptsReturn="False"
							Control.Background="#00FFFFFF"
							Control.BorderThickness="0"
							CaretBrush="{TemplateBinding Control.Foreground}"
							Control.FontFamily="{TemplateBinding Control.FontFamily}"
							Control.FontSize="{TemplateBinding Control.FontSize}"
							Control.FontStretch="{TemplateBinding Control.FontStretch}"
							Control.FontStyle="{TemplateBinding Control.FontStyle}"
							Control.FontWeight="{TemplateBinding Control.FontWeight}"
							Control.Foreground="{TemplateBinding Control.Foreground}"
							IsCanStartWithZero="True"
							IsEmptyAllowed="False"
							IsSignAllowed="True"
							Control.IsTabStop="{TemplateBinding Control.IsTabStop}"
							SelectionBrush="{DynamicResource CalendarSelectionBrush}"
							Control.TabIndex="{TemplateBinding Control.TabIndex}"
							TextAlignment="{TemplateBinding TextBox.TextAlignment}"
							TextWrapping="NoWrap"
							ContextMenu="{x:Null}"
							IsUndoEnabled="{Binding IsUndoEnabled, RelativeSource={RelativeSource TemplatedParent}}"
							Text="{Binding Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}" />
						<Grid
							Column="2"
							FrameworkElement.Margin="{TemplateBinding characterRestrictingTextBoxes:DigitBoxUpDown.UpDownContainerMargin}">
							<Grid.RowDefinitions>
								<RowDefinition
									RowDefinition.Height="*" />
								<RowDefinition
									RowDefinition.Height="*" />
							</Grid.RowDefinitions>
							<buttons:SVGButton
								ColorShiftBrush="{TemplateBinding Control.Foreground}"
								Drawing="{DynamicResource MacrosMouseScrollUp}"
								SVGMargin="0"
								ButtonBase.Command="{Binding IncrementCommand, RelativeSource={RelativeSource TemplatedParent}}" />
							<buttons:SVGButton
								Grid.Row="1"
								ColorShiftBrush="{TemplateBinding Control.Foreground}"
								Drawing="{DynamicResource MacrosMouseScrollDown}"
								SVGMargin="0"
								ButtonBase.Command="{Binding DecrementCommand, RelativeSource={RelativeSource TemplatedParent}}" />
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
